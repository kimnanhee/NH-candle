
NH_candle.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000ca4  00000d38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ca4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000044  0080013a  0080013a  00000d72  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d72  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dd0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000155f  00000000  00000000  00000ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a05  00000000  00000000  00002423  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000095e  00000000  00000000  00002e28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001d4  00000000  00000000  00003788  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000588  00000000  00000000  0000395c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c0d  00000000  00000000  00003ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  00004af1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	e5 c2       	rjmp	.+1482   	; 0x614 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ea       	ldi	r30, 0xA4	; 164
  a0:	fc e0       	ldi	r31, 0x0C	; 12
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 33       	cpi	r26, 0x3A	; 58
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e3       	ldi	r26, 0x3A	; 58
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ae 37       	cpi	r26, 0x7E	; 126
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	f8 d0       	rcall	.+496    	; 0x2b4 <main>
  c4:	ed c5       	rjmp	.+3034   	; 0xca0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_set>:

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
	OCR1B = G;
	OCR1C = B;
  c8:	80 e8       	ldi	r24, 0x80	; 128
  ca:	86 b9       	out	0x06, r24	; 6
  cc:	86 b1       	in	r24, 0x06	; 6
  ce:	87 60       	ori	r24, 0x07	; 7
  d0:	86 b9       	out	0x06, r24	; 6
  d2:	08 95       	ret

000000d4 <ADC_read>:
  d4:	90 e4       	ldi	r25, 0x40	; 64
  d6:	97 b9       	out	0x07, r25	; 7
  d8:	97 b1       	in	r25, 0x07	; 7
  da:	89 2b       	or	r24, r25
  dc:	87 b9       	out	0x07, r24	; 7
  de:	36 9a       	sbi	0x06, 6	; 6
  e0:	36 99       	sbic	0x06, 6	; 6
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <ADC_read+0xc>
  e4:	84 b1       	in	r24, 0x04	; 4
  e6:	95 b1       	in	r25, 0x05	; 5
  e8:	08 95       	ret

000000ea <Request>:
  ea:	88 9a       	sbi	0x11, 0	; 17
  ec:	90 98       	cbi	0x12, 0	; 18
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	89 ef       	ldi	r24, 0xF9	; 249
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <Request+0xa>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <Request+0x14>
  fe:	00 00       	nop
 100:	90 9a       	sbi	0x12, 0	; 18
 102:	08 95       	ret

00000104 <Response>:
 104:	88 98       	cbi	0x11, 0	; 17
 106:	80 99       	sbic	0x10, 0	; 16
 108:	fe cf       	rjmp	.-4      	; 0x106 <Response+0x2>
 10a:	80 9b       	sbis	0x10, 0	; 16
 10c:	fe cf       	rjmp	.-4      	; 0x10a <Response+0x6>
 10e:	80 99       	sbic	0x10, 0	; 16
 110:	fe cf       	rjmp	.-4      	; 0x10e <Response+0xa>
 112:	08 95       	ret

00000114 <Receive_data>:
 114:	88 e0       	ldi	r24, 0x08	; 8
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	80 9b       	sbis	0x10, 0	; 16
 11a:	fe cf       	rjmp	.-4      	; 0x118 <Receive_data+0x4>
 11c:	20 ea       	ldi	r18, 0xA0	; 160
 11e:	2a 95       	dec	r18
 120:	f1 f7       	brne	.-4      	; 0x11e <Receive_data+0xa>
 122:	80 9b       	sbis	0x10, 0	; 16
 124:	07 c0       	rjmp	.+14     	; 0x134 <Receive_data+0x20>
 126:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <c>
 12a:	22 0f       	add	r18, r18
 12c:	21 60       	ori	r18, 0x01	; 1
 12e:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <c>
 132:	05 c0       	rjmp	.+10     	; 0x13e <Receive_data+0x2a>
 134:	20 91 46 01 	lds	r18, 0x0146	; 0x800146 <c>
 138:	22 0f       	add	r18, r18
 13a:	20 93 46 01 	sts	0x0146, r18	; 0x800146 <c>
 13e:	80 99       	sbic	0x10, 0	; 16
 140:	fe cf       	rjmp	.-4      	; 0x13e <Receive_data+0x2a>
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	49 f7       	brne	.-46     	; 0x118 <Receive_data+0x4>
 146:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <c>
 14a:	08 95       	ret

0000014c <LCD_rCommand>:
 14c:	1a ba       	out	0x1a, r1	; 26
 14e:	a8 98       	cbi	0x15, 0	; 21
 150:	a9 9a       	sbi	0x15, 1	; 21
 152:	aa 9a       	sbi	0x15, 2	; 21
 154:	85 e0       	ldi	r24, 0x05	; 5
 156:	8a 95       	dec	r24
 158:	f1 f7       	brne	.-4      	; 0x156 <LCD_rCommand+0xa>
 15a:	00 00       	nop
 15c:	89 b3       	in	r24, 0x19	; 25
 15e:	95 e0       	ldi	r25, 0x05	; 5
 160:	9a 95       	dec	r25
 162:	f1 f7       	brne	.-4      	; 0x160 <LCD_rCommand+0x14>
 164:	00 00       	nop
 166:	aa 98       	cbi	0x15, 2	; 21
 168:	9f ef       	ldi	r25, 0xFF	; 255
 16a:	9a bb       	out	0x1a, r25	; 26
 16c:	95 e0       	ldi	r25, 0x05	; 5
 16e:	9a 95       	dec	r25
 170:	f1 f7       	brne	.-4      	; 0x16e <LCD_rCommand+0x22>
 172:	00 00       	nop
 174:	08 95       	ret

00000176 <LCD_wCommand>:
 176:	a8 98       	cbi	0x15, 0	; 21
 178:	a9 98       	cbi	0x15, 1	; 21
 17a:	aa 9a       	sbi	0x15, 2	; 21
 17c:	8b bb       	out	0x1b, r24	; 27
 17e:	85 e0       	ldi	r24, 0x05	; 5
 180:	8a 95       	dec	r24
 182:	f1 f7       	brne	.-4      	; 0x180 <LCD_wCommand+0xa>
 184:	00 00       	nop
 186:	aa 98       	cbi	0x15, 2	; 21
 188:	85 e0       	ldi	r24, 0x05	; 5
 18a:	8a 95       	dec	r24
 18c:	f1 f7       	brne	.-4      	; 0x18a <LCD_wCommand+0x14>
 18e:	00 00       	nop
 190:	08 95       	ret

00000192 <LCD_wBCommand>:
 192:	cf 93       	push	r28
 194:	c8 2f       	mov	r28, r24
 196:	04 c0       	rjmp	.+8      	; 0x1a0 <LCD_wBCommand+0xe>
 198:	85 e0       	ldi	r24, 0x05	; 5
 19a:	8a 95       	dec	r24
 19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_wBCommand+0x8>
 19e:	00 00       	nop
 1a0:	d5 df       	rcall	.-86     	; 0x14c <LCD_rCommand>
 1a2:	88 23       	and	r24, r24
 1a4:	cc f3       	brlt	.-14     	; 0x198 <LCD_wBCommand+0x6>
 1a6:	a8 98       	cbi	0x15, 0	; 21
 1a8:	a9 98       	cbi	0x15, 1	; 21
 1aa:	aa 9a       	sbi	0x15, 2	; 21
 1ac:	cb bb       	out	0x1b, r28	; 27
 1ae:	85 e0       	ldi	r24, 0x05	; 5
 1b0:	8a 95       	dec	r24
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <LCD_wBCommand+0x1e>
 1b4:	00 00       	nop
 1b6:	aa 98       	cbi	0x15, 2	; 21
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	8a 95       	dec	r24
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCD_wBCommand+0x28>
 1be:	00 00       	nop
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <LCD_Init>:
 1c4:	2f ef       	ldi	r18, 0xFF	; 255
 1c6:	81 ee       	ldi	r24, 0xE1	; 225
 1c8:	94 e0       	ldi	r25, 0x04	; 4
 1ca:	21 50       	subi	r18, 0x01	; 1
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	90 40       	sbci	r25, 0x00	; 0
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <LCD_Init+0x6>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <LCD_Init+0x10>
 1d4:	00 00       	nop
 1d6:	88 e3       	ldi	r24, 0x38	; 56
 1d8:	ce df       	rcall	.-100    	; 0x176 <LCD_wCommand>
 1da:	8f e3       	ldi	r24, 0x3F	; 63
 1dc:	9c e9       	ldi	r25, 0x9C	; 156
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <LCD_Init+0x1a>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <LCD_Init+0x20>
 1e4:	00 00       	nop
 1e6:	88 e3       	ldi	r24, 0x38	; 56
 1e8:	c6 df       	rcall	.-116    	; 0x176 <LCD_wCommand>
 1ea:	8f e1       	ldi	r24, 0x1F	; 31
 1ec:	93 e0       	ldi	r25, 0x03	; 3
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_Init+0x2a>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_Init+0x30>
 1f4:	00 00       	nop
 1f6:	88 e3       	ldi	r24, 0x38	; 56
 1f8:	be df       	rcall	.-132    	; 0x176 <LCD_wCommand>
 1fa:	8f e1       	ldi	r24, 0x1F	; 31
 1fc:	93 e0       	ldi	r25, 0x03	; 3
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <LCD_Init+0x3a>
 202:	00 c0       	rjmp	.+0      	; 0x204 <LCD_Init+0x40>
 204:	00 00       	nop
 206:	88 e3       	ldi	r24, 0x38	; 56
 208:	c4 df       	rcall	.-120    	; 0x192 <LCD_wBCommand>
 20a:	8c e0       	ldi	r24, 0x0C	; 12
 20c:	c2 df       	rcall	.-124    	; 0x192 <LCD_wBCommand>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	c0 cf       	rjmp	.-128    	; 0x192 <LCD_wBCommand>
 212:	08 95       	ret

00000214 <LCD_wData>:
 214:	cf 93       	push	r28
 216:	c8 2f       	mov	r28, r24
 218:	04 c0       	rjmp	.+8      	; 0x222 <LCD_wData+0xe>
 21a:	85 e0       	ldi	r24, 0x05	; 5
 21c:	8a 95       	dec	r24
 21e:	f1 f7       	brne	.-4      	; 0x21c <LCD_wData+0x8>
 220:	00 00       	nop
 222:	94 df       	rcall	.-216    	; 0x14c <LCD_rCommand>
 224:	88 23       	and	r24, r24
 226:	cc f3       	brlt	.-14     	; 0x21a <LCD_wData+0x6>
 228:	a8 9a       	sbi	0x15, 0	; 21
 22a:	a9 98       	cbi	0x15, 1	; 21
 22c:	aa 9a       	sbi	0x15, 2	; 21
 22e:	cb bb       	out	0x1b, r28	; 27
 230:	85 e0       	ldi	r24, 0x05	; 5
 232:	8a 95       	dec	r24
 234:	f1 f7       	brne	.-4      	; 0x232 <LCD_wData+0x1e>
 236:	00 00       	nop
 238:	aa 98       	cbi	0x15, 2	; 21
 23a:	85 e0       	ldi	r24, 0x05	; 5
 23c:	8a 95       	dec	r24
 23e:	f1 f7       	brne	.-4      	; 0x23c <LCD_wData+0x28>
 240:	00 00       	nop
 242:	cf 91       	pop	r28
 244:	08 95       	ret

00000246 <LCD_wString>:
 246:	cf 93       	push	r28
 248:	df 93       	push	r29
 24a:	ec 01       	movw	r28, r24
 24c:	88 81       	ld	r24, Y
 24e:	88 23       	and	r24, r24
 250:	29 f0       	breq	.+10     	; 0x25c <LCD_wString+0x16>
 252:	21 96       	adiw	r28, 0x01	; 1
 254:	df df       	rcall	.-66     	; 0x214 <LCD_wData>
 256:	89 91       	ld	r24, Y+
 258:	81 11       	cpse	r24, r1
 25a:	fc cf       	rjmp	.-8      	; 0x254 <LCD_wString+0xe>
 25c:	df 91       	pop	r29
 25e:	cf 91       	pop	r28
 260:	08 95       	ret

00000262 <uart_init>:
 262:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
 266:	89 b9       	out	0x09, r24	; 9
 268:	88 e9       	ldi	r24, 0x98	; 152
 26a:	8a b9       	out	0x0a, r24	; 10
 26c:	08 95       	ret

0000026e <uart_write>:
 26e:	5d 9b       	sbis	0x0b, 5	; 11
 270:	fe cf       	rjmp	.-4      	; 0x26e <uart_write>
 272:	8c b9       	out	0x0c, r24	; 12
 274:	08 95       	ret

00000276 <uart_string>:
 276:	cf 93       	push	r28
 278:	df 93       	push	r29
 27a:	ec 01       	movw	r28, r24
 27c:	88 81       	ld	r24, Y
 27e:	88 23       	and	r24, r24
 280:	29 f0       	breq	.+10     	; 0x28c <uart_string+0x16>
 282:	21 96       	adiw	r28, 0x01	; 1
 284:	f4 df       	rcall	.-24     	; 0x26e <uart_write>
 286:	89 91       	ld	r24, Y+
 288:	81 11       	cpse	r24, r1
 28a:	fc cf       	rjmp	.-8      	; 0x284 <uart_string+0xe>
 28c:	df 91       	pop	r29
 28e:	cf 91       	pop	r28
 290:	08 95       	ret

00000292 <pwm_init>:
 292:	8f b5       	in	r24, 0x2f	; 47
 294:	89 6a       	ori	r24, 0xA9	; 169
 296:	8f bd       	out	0x2f, r24	; 47
 298:	8e b5       	in	r24, 0x2e	; 46
 29a:	8a 60       	ori	r24, 0x0A	; 10
 29c:	8e bd       	out	0x2e, r24	; 46
 29e:	1b bc       	out	0x2b, r1	; 43
 2a0:	1a bc       	out	0x2a, r1	; 42
 2a2:	19 bc       	out	0x29, r1	; 41
 2a4:	18 bc       	out	0x28, r1	; 40
 2a6:	84 e6       	ldi	r24, 0x64	; 100
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2ae:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 2b2:	08 95       	ret

000002b4 <main>:

int uart_finish=0, uart_i=0, uart_state=0;
char uart_buff[50];

int main(void)
{
 2b4:	cf 93       	push	r28
 2b6:	df 93       	push	r29
 2b8:	cd b7       	in	r28, 0x3d	; 61
 2ba:	de b7       	in	r29, 0x3e	; 62
 2bc:	e2 97       	sbiw	r28, 0x32	; 50
 2be:	0f b6       	in	r0, 0x3f	; 63
 2c0:	f8 94       	cli
 2c2:	de bf       	out	0x3e, r29	; 62
 2c4:	0f be       	out	0x3f, r0	; 63
 2c6:	cd bf       	out	0x3d, r28	; 61
    DDRA = 0xFF; // LCD data 핀
 2c8:	8f ef       	ldi	r24, 0xFF	; 255
 2ca:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xFF; // LCD control 핀
 2cc:	84 bb       	out	0x14, r24	; 20
	
	DDRB = 0xFF; // RGB LED
 2ce:	87 bb       	out	0x17, r24	; 23
	DDRD = 0x00; // DHT
 2d0:	11 ba       	out	0x11, r1	; 17
	DDRF = 0x00; // cds, sound
 2d2:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	LCD_Init();
 2d6:	76 df       	rcall	.-276    	; 0x1c4 <LCD_Init>
	ADC_set();
 2d8:	f7 de       	rcall	.-530    	; 0xc8 <ADC_set>
	pwm_init();
 2da:	db df       	rcall	.-74     	; 0x292 <pwm_init>
	uart_init(BAUDRATE(9600));
 2dc:	87 e6       	ldi	r24, 0x67	; 103
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	c0 df       	rcall	.-128    	; 0x262 <uart_init>
 2e2:	78 94       	sei
	sei();
 2e4:	e1 2c       	mov	r14, r1
	
	int cds_value; // CDS ADC값 저장
	char touch_value; // touch 센서 값 저장
	uint8_t I_RH, D_RH, I_Temp, D_Temp, CheckSum;
	
	int time_cnt=0; // 0.1초마다 cnt++, 2초마다 DHT 센서값을 읽어오기 위해서 사용
 2e6:	f1 2c       	mov	r15, r1
 2e8:	01 e0       	ldi	r16, 0x01	; 1
	ADC_set();
	pwm_init();
	uart_init(BAUDRATE(9600));
	sei();
	
	int mode = 1; // 모드 저장
 2ea:	10 e0       	ldi	r17, 0x00	; 0
 2ec:	0f 2e       	mov	r0, r31
	
    while (1) 
    {
		if(uart_finish)
		{
			if(uart_buff[0] == 'M') mode = uart_buff[1]-'0'; // M[ ].(mode)
 2ee:	f7 e4       	ldi	r31, 0x47	; 71
 2f0:	6f 2e       	mov	r6, r31
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	7f 2e       	mov	r7, r31
 2f6:	f0 2d       	mov	r31, r0
 2f8:	0f 2e       	mov	r0, r31
			mode++;
			_delay_ms(100);
		}
		if(mode > 3) mode = 1;
		
		sprintf(buff, "mode %d", mode); // LCD에 현재 모드 출력
 2fa:	f0 e0       	ldi	r31, 0x00	; 0
 2fc:	af 2e       	mov	r10, r31
 2fe:	f1 e0       	ldi	r31, 0x01	; 1
 300:	bf 2e       	mov	r11, r31
 302:	f0 2d       	mov	r31, r0
 304:	ce 01       	movw	r24, r28
 306:	01 96       	adiw	r24, 0x01	; 1
 308:	6c 01       	movw	r12, r24
 30a:	44 24       	eor	r4, r4
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 30c:	4a 94       	dec	r4
 30e:	51 2c       	mov	r5, r1
 310:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <uart_finish>
	
	int time_cnt=0; // 0.1초마다 cnt++, 2초마다 DHT 센서값을 읽어오기 위해서 사용
	
    while (1) 
    {
		if(uart_finish)
 314:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <uart_finish+0x1>
 318:	89 2b       	or	r24, r25
 31a:	09 f4       	brne	.+2      	; 0x31e <main+0x6a>
 31c:	83 c0       	rjmp	.+262    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 31e:	f3 01       	movw	r30, r6
		{
			if(uart_buff[0] == 'M') mode = uart_buff[1]-'0'; // M[ ].(mode)
 320:	80 81       	ld	r24, Z
 322:	8d 34       	cpi	r24, 0x4D	; 77
 324:	29 f4       	brne	.+10     	; 0x330 <main+0x7c>
 326:	01 81       	ldd	r16, Z+1	; 0x01
 328:	10 e0       	ldi	r17, 0x00	; 0
 32a:	00 53       	subi	r16, 0x30	; 48
 32c:	11 09       	sbc	r17, r1
 32e:	76 c0       	rjmp	.+236    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 330:	83 35       	cpi	r24, 0x53	; 83
			else if(uart_buff[0] == 'S') // S[][][].(red,green,blue)
 332:	09 f0       	breq	.+2      	; 0x336 <main+0x82>
 334:	73 c0       	rjmp	.+230    	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 336:	f3 01       	movw	r30, r6
			{
				set_R = (uart_buff[1]-'0')*100 + (uart_buff[2]-'0')*10 + (uart_buff[3]-'0');
 338:	81 81       	ldd	r24, Z+1	; 0x01
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	c0 97       	sbiw	r24, 0x30	; 48
 33e:	f4 e6       	ldi	r31, 0x64	; 100
 340:	f8 9f       	mul	r31, r24
 342:	a0 01       	movw	r20, r0
 344:	f9 9f       	mul	r31, r25
 346:	50 0d       	add	r21, r0
 348:	11 24       	eor	r1, r1
 34a:	f3 01       	movw	r30, r6
 34c:	82 81       	ldd	r24, Z+2	; 0x02
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	c0 97       	sbiw	r24, 0x30	; 48
 352:	bc 01       	movw	r22, r24
 354:	66 0f       	add	r22, r22
 356:	77 1f       	adc	r23, r23
 358:	9c 01       	movw	r18, r24
 35a:	22 0f       	add	r18, r18
 35c:	33 1f       	adc	r19, r19
 35e:	22 0f       	add	r18, r18
 360:	33 1f       	adc	r19, r19
 362:	22 0f       	add	r18, r18
 364:	33 1f       	adc	r19, r19
 366:	cb 01       	movw	r24, r22
 368:	82 0f       	add	r24, r18
 36a:	93 1f       	adc	r25, r19
 36c:	84 0f       	add	r24, r20
 36e:	95 1f       	adc	r25, r21
 370:	23 81       	ldd	r18, Z+3	; 0x03
 372:	30 e0       	ldi	r19, 0x00	; 0
 374:	20 53       	subi	r18, 0x30	; 48
 376:	31 09       	sbc	r19, r1
 378:	82 0f       	add	r24, r18
 37a:	93 1f       	adc	r25, r19
 37c:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <set_R+0x1>
 380:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <set_R>
 384:	84 81       	ldd	r24, Z+4	; 0x04
				set_G = (uart_buff[4]-'0')*100 + (uart_buff[5]-'0')*10 + (uart_buff[6]-'0');
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	c0 97       	sbiw	r24, 0x30	; 48
 38a:	f4 e6       	ldi	r31, 0x64	; 100
 38c:	f8 9f       	mul	r31, r24
 38e:	a0 01       	movw	r20, r0
 390:	f9 9f       	mul	r31, r25
 392:	50 0d       	add	r21, r0
 394:	11 24       	eor	r1, r1
 396:	f3 01       	movw	r30, r6
 398:	85 81       	ldd	r24, Z+5	; 0x05
 39a:	90 e0       	ldi	r25, 0x00	; 0
 39c:	c0 97       	sbiw	r24, 0x30	; 48
 39e:	bc 01       	movw	r22, r24
 3a0:	66 0f       	add	r22, r22
 3a2:	77 1f       	adc	r23, r23
 3a4:	9c 01       	movw	r18, r24
 3a6:	22 0f       	add	r18, r18
 3a8:	33 1f       	adc	r19, r19
 3aa:	22 0f       	add	r18, r18
 3ac:	33 1f       	adc	r19, r19
 3ae:	22 0f       	add	r18, r18
 3b0:	33 1f       	adc	r19, r19
 3b2:	cb 01       	movw	r24, r22
 3b4:	82 0f       	add	r24, r18
 3b6:	93 1f       	adc	r25, r19
 3b8:	84 0f       	add	r24, r20
 3ba:	95 1f       	adc	r25, r21
 3bc:	26 81       	ldd	r18, Z+6	; 0x06
 3be:	30 e0       	ldi	r19, 0x00	; 0
 3c0:	20 53       	subi	r18, 0x30	; 48
 3c2:	31 09       	sbc	r19, r1
 3c4:	82 0f       	add	r24, r18
 3c6:	93 1f       	adc	r25, r19
 3c8:	90 93 43 01 	sts	0x0143, r25	; 0x800143 <set_G+0x1>
 3cc:	80 93 42 01 	sts	0x0142, r24	; 0x800142 <set_G>
 3d0:	87 81       	ldd	r24, Z+7	; 0x07
				set_B = (uart_buff[7]-'0')*100 + (uart_buff[8]-'0')*10 + (uart_buff[9]-'0');
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	c0 97       	sbiw	r24, 0x30	; 48
 3d6:	f4 e6       	ldi	r31, 0x64	; 100
 3d8:	f8 9f       	mul	r31, r24
 3da:	a0 01       	movw	r20, r0
 3dc:	f9 9f       	mul	r31, r25
 3de:	50 0d       	add	r21, r0
 3e0:	11 24       	eor	r1, r1
 3e2:	f3 01       	movw	r30, r6
 3e4:	80 85       	ldd	r24, Z+8	; 0x08
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	c0 97       	sbiw	r24, 0x30	; 48
 3ea:	bc 01       	movw	r22, r24
 3ec:	66 0f       	add	r22, r22
 3ee:	77 1f       	adc	r23, r23
 3f0:	9c 01       	movw	r18, r24
 3f2:	22 0f       	add	r18, r18
 3f4:	33 1f       	adc	r19, r19
 3f6:	22 0f       	add	r18, r18
 3f8:	33 1f       	adc	r19, r19
 3fa:	22 0f       	add	r18, r18
 3fc:	33 1f       	adc	r19, r19
 3fe:	cb 01       	movw	r24, r22
 400:	82 0f       	add	r24, r18
 402:	93 1f       	adc	r25, r19
 404:	84 0f       	add	r24, r20
 406:	95 1f       	adc	r25, r21
 408:	21 85       	ldd	r18, Z+9	; 0x09
 40a:	30 e0       	ldi	r19, 0x00	; 0
 40c:	20 53       	subi	r18, 0x30	; 48
 40e:	31 09       	sbc	r19, r1
 410:	82 0f       	add	r24, r18
 412:	93 1f       	adc	r25, r19
 414:	90 93 41 01 	sts	0x0141, r25	; 0x800141 <set_B+0x1>
 418:	80 93 40 01 	sts	0x0140, r24	; 0x800140 <set_B>
 41c:	10 92 3f 01 	sts	0x013F, r1	; 0x80013f <uart_finish+0x1>
			}
			uart_finish = 0;
 420:	10 92 3e 01 	sts	0x013E, r1	; 0x80013e <uart_finish>
		}
		
		cds_value = ADC_read(0); // cds ADC 값 측정
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	56 de       	rcall	.-852    	; 0xd4 <ADC_read>
 428:	4c 01       	movw	r8, r24
 42a:	01 9b       	sbis	0x00, 1	; 0
		touch_value = (PINF & 0x02); // 
		
		if(touch_value == 0x02) {
 42c:	0b c0       	rjmp	.+22     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 42e:	0f 5f       	subi	r16, 0xFF	; 255
			mode++;
 430:	1f 4f       	sbci	r17, 0xFF	; 255
 432:	ff ef       	ldi	r31, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 434:	21 ee       	ldi	r18, 0xE1	; 225
 436:	84 e0       	ldi	r24, 0x04	; 4
 438:	f1 50       	subi	r31, 0x01	; 1
 43a:	20 40       	sbci	r18, 0x00	; 0
 43c:	80 40       	sbci	r24, 0x00	; 0
 43e:	e1 f7       	brne	.-8      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 440:	00 c0       	rjmp	.+0      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 442:	00 00       	nop
 444:	04 30       	cpi	r16, 0x04	; 4
			_delay_ms(100);
		}
		if(mode > 3) mode = 1;
 446:	11 05       	cpc	r17, r1
 448:	14 f0       	brlt	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	01 e0       	ldi	r16, 0x01	; 1
 44c:	10 e0       	ldi	r17, 0x00	; 0
 44e:	1f 93       	push	r17
		
		sprintf(buff, "mode %d", mode); // LCD에 현재 모드 출력
 450:	0f 93       	push	r16
 452:	bf 92       	push	r11
 454:	af 92       	push	r10
 456:	df 92       	push	r13
 458:	cf 92       	push	r12
 45a:	47 d1       	rcall	.+654    	; 0x6ea <sprintf>
	
	_delay_us(1);
}
void LCD_setcursor(char col, char row)
{
	LCD_wBCommand(0x80 | col * 0x40 + row);
 45c:	80 e8       	ldi	r24, 0x80	; 128
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	98 de       	rcall	.-720    	; 0x192 <LCD_wBCommand>
 462:	c6 01       	movw	r24, r12
		LCD_setcursor(0, 0);
		LCD_wString(buff);
 464:	f0 de       	rcall	.-544    	; 0x246 <LCD_wString>
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
		
		if(time_cnt >= 200) // 2초마다 DHT센서값 측정
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0
 46e:	0f 90       	pop	r0
 470:	0f 90       	pop	r0
 472:	98 ec       	ldi	r25, 0xC8	; 200
 474:	e9 16       	cp	r14, r25
 476:	f1 04       	cpc	r15, r1
		{
			Request();		 //시작 펄스 신호 보냄
 478:	0c f4       	brge	.+2      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
			Response();		 //센서로부터 응답 받음
 47a:	5a c0       	rjmp	.+180    	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
			I_RH=Receive_data();	 //습도의 정수 부분
 47c:	36 de       	rcall	.-916    	; 0xea <Request>
 47e:	42 de       	rcall	.-892    	; 0x104 <Response>
 480:	49 de       	rcall	.-878    	; 0x114 <Receive_data>
			D_RH=Receive_data();	 //습도의 실수 부분
 482:	e8 2e       	mov	r14, r24
 484:	47 de       	rcall	.-882    	; 0x114 <Receive_data>
 486:	28 2e       	mov	r2, r24
			I_Temp=Receive_data();	 //온도의 정수 부분
 488:	45 de       	rcall	.-886    	; 0x114 <Receive_data>
 48a:	38 2e       	mov	r3, r24
 48c:	43 de       	rcall	.-890    	; 0x114 <Receive_data>
			D_Temp=Receive_data();	 //온도의 실수 부분
 48e:	f8 2e       	mov	r15, r24
 490:	41 de       	rcall	.-894    	; 0x114 <Receive_data>
 492:	22 2d       	mov	r18, r2
			CheckSum=Receive_data(); //모든 세그먼트의 체크섬
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	2e 0d       	add	r18, r14
			
			if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum) // DHT 센서값 측정 오류
 498:	31 1d       	adc	r19, r1
 49a:	23 0d       	add	r18, r3
 49c:	31 1d       	adc	r19, r1
 49e:	2f 0d       	add	r18, r15
 4a0:	31 1d       	adc	r19, r1
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	28 17       	cp	r18, r24
 4a6:	39 07       	cpc	r19, r25
 4a8:	89 f0       	breq	.+34     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4aa:	86 e0       	ldi	r24, 0x06	; 6
 4ac:	e8 e0       	ldi	r30, 0x08	; 8
 4ae:	f1 e0       	ldi	r31, 0x01	; 1
			{
				I_Temp = D_Temp = I_RH = D_RH = -1;
				sprintf(buff, "error");
 4b0:	d6 01       	movw	r26, r12
 4b2:	01 90       	ld	r0, Z+
 4b4:	0d 92       	st	X+, r0
 4b6:	8a 95       	dec	r24
 4b8:	e1 f7       	brne	.-8      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ba:	01 30       	cpi	r16, 0x01	; 1
 4bc:	11 05       	cpc	r17, r1
 4be:	09 f4       	brne	.+2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
				uart_string(buff);
			}
			time_cnt = 0;
		}
		
		if(mode == 1) // 모드 1 RGB LED 출력
 4c0:	3e c0       	rjmp	.+124    	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 4c2:	e1 2c       	mov	r14, r1
 4c4:	f1 2c       	mov	r15, r1
 4c6:	33 24       	eor	r3, r3
				LCD_wString(buff);
				
				sprintf(buff, "T%2d.%d H%2d.%d C%4d M%1d", I_Temp, D_Temp, I_RH, D_RH, cds_value, mode); // 온도, 습도, 조도, 모드
				uart_string(buff);
			}
			time_cnt = 0;
 4c8:	3a 94       	dec	r3
 4ca:	5b c0       	rjmp	.+182    	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
			D_Temp=Receive_data();	 //온도의 실수 부분
			CheckSum=Receive_data(); //모든 세그먼트의 체크섬
			
			if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum) // DHT 센서값 측정 오류
			{
				I_Temp = D_Temp = I_RH = D_RH = -1;
 4cc:	9f 92       	push	r9
 4ce:	8f 92       	push	r8
 4d0:	1f 92       	push	r1
				
				(buff);
			}
			else
			{
				sprintf(buff, "%d.%d %d.%d %d  ", I_Temp, D_Temp, I_RH, D_RH, cds_value);
 4d2:	2f 92       	push	r2
 4d4:	1f 92       	push	r1
 4d6:	ef 92       	push	r14
 4d8:	1f 92       	push	r1
 4da:	ff 92       	push	r15
 4dc:	1f 92       	push	r1
 4de:	3f 92       	push	r3
 4e0:	ee e0       	ldi	r30, 0x0E	; 14
 4e2:	f1 e0       	ldi	r31, 0x01	; 1
 4e4:	ff 93       	push	r31
 4e6:	ef 93       	push	r30
 4e8:	df 92       	push	r13
 4ea:	cf 92       	push	r12
 4ec:	fe d0       	rcall	.+508    	; 0x6ea <sprintf>
 4ee:	80 ec       	ldi	r24, 0xC0	; 192
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	4f de       	rcall	.-866    	; 0x192 <LCD_wBCommand>
 4f4:	c6 01       	movw	r24, r12
 4f6:	a7 de       	rcall	.-690    	; 0x246 <LCD_wString>
				LCD_setcursor(1, 0);
				LCD_wString(buff);
 4f8:	1f 93       	push	r17
 4fa:	0f 93       	push	r16
 4fc:	9f 92       	push	r9
				
				sprintf(buff, "T%2d.%d H%2d.%d C%4d M%1d", I_Temp, D_Temp, I_RH, D_RH, cds_value, mode); // 온도, 습도, 조도, 모드
 4fe:	8f 92       	push	r8
 500:	1f 92       	push	r1
 502:	2f 92       	push	r2
 504:	1f 92       	push	r1
 506:	ef 92       	push	r14
 508:	1f 92       	push	r1
 50a:	ff 92       	push	r15
 50c:	1f 92       	push	r1
 50e:	3f 92       	push	r3
 510:	8f e1       	ldi	r24, 0x1F	; 31
 512:	91 e0       	ldi	r25, 0x01	; 1
 514:	9f 93       	push	r25
 516:	8f 93       	push	r24
 518:	df 92       	push	r13
 51a:	cf 92       	push	r12
 51c:	e6 d0       	rcall	.+460    	; 0x6ea <sprintf>
 51e:	c6 01       	movw	r24, r12
 520:	aa de       	rcall	.-684    	; 0x276 <uart_string>
				uart_string(buff);
 522:	0f b6       	in	r0, 0x3f	; 63
 524:	f8 94       	cli
 526:	de bf       	out	0x3e, r29	; 62
 528:	0f be       	out	0x3f, r0	; 63
 52a:	cd bf       	out	0x3d, r28	; 61
 52c:	e1 2c       	mov	r14, r1
 52e:	f1 2c       	mov	r15, r1
 530:	01 30       	cpi	r16, 0x01	; 1
			}
			time_cnt = 0;
 532:	11 05       	cpc	r17, r1
 534:	31 f5       	brne	.+76     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
		}
		
		if(mode == 1) // 모드 1 RGB LED 출력
 536:	9e e1       	ldi	r25, 0x1E	; 30
 538:	93 15       	cp	r25, r3
 53a:	70 f4       	brcc	.+28     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
		{
			if(I_Temp > 30) pwm_led(255, 0, 0);
 53c:	04 c0       	rjmp	.+8      	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 53e:	e1 2c       	mov	r14, r1
 540:	f1 2c       	mov	r15, r1
 542:	33 24       	eor	r3, r3
				LCD_wString(buff);
				
				sprintf(buff, "T%2d.%d H%2d.%d C%4d M%1d", I_Temp, D_Temp, I_RH, D_RH, cds_value, mode); // 온도, 습도, 조도, 모드
				uart_string(buff);
			}
			time_cnt = 0;
 544:	3a 94       	dec	r3
 546:	5b bc       	out	0x2b, r5	; 43
			D_Temp=Receive_data();	 //온도의 실수 부분
			CheckSum=Receive_data(); //모든 세그먼트의 체크섬
			
			if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum) // DHT 센서값 측정 오류
			{
				I_Temp = D_Temp = I_RH = D_RH = -1;
 548:	4a bc       	out	0x2a, r4	; 42
 54a:	19 bc       	out	0x29, r1	; 41
 54c:	18 bc       	out	0x28, r1	; 40
 54e:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 550:	f0 e0       	ldi	r31, 0x00	; 0
 552:	11 82       	std	Z+1, r1	; 0x01
	OCR1C = B;
 554:	10 82       	st	Z, r1
 556:	54 c0       	rjmp	.+168    	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 558:	f9 e1       	ldi	r31, 0x19	; 25
 55a:	f3 15       	cp	r31, r3
 55c:	48 f4       	brcc	.+18     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
		}
		
		if(mode == 1) // 모드 1 RGB LED 출력
		{
			if(I_Temp > 30) pwm_led(255, 0, 0);
			else if(I_Temp > 25) pwm_led(0, 255, 0);
 55e:	1b bc       	out	0x2b, r1	; 43
 560:	1a bc       	out	0x2a, r1	; 42
 562:	59 bc       	out	0x29, r5	; 41
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 564:	48 bc       	out	0x28, r4	; 40
 566:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 568:	f0 e0       	ldi	r31, 0x00	; 0
 56a:	11 82       	std	Z+1, r1	; 0x01
	OCR1C = B;
 56c:	10 82       	st	Z, r1
 56e:	48 c0       	rjmp	.+144    	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 570:	1b bc       	out	0x2b, r1	; 43
 572:	1a bc       	out	0x2a, r1	; 42
 574:	19 bc       	out	0x29, r1	; 41
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 576:	18 bc       	out	0x28, r1	; 40
 578:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 57a:	f0 e0       	ldi	r31, 0x00	; 0
 57c:	51 82       	std	Z+1, r5	; 0x01
	OCR1C = B;
 57e:	40 82       	st	Z, r4
 580:	3f c0       	rjmp	.+126    	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 582:	02 30       	cpi	r16, 0x02	; 2
 584:	11 05       	cpc	r17, r1
 586:	29 f5       	brne	.+74     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
			else pwm_led(0, 0, 255);
		}
		else if(mode == 2) // 모드 2 RGB LED 출력
 588:	f1 e2       	ldi	r31, 0x21	; 33
 58a:	8f 16       	cp	r8, r31
 58c:	f3 e0       	ldi	r31, 0x03	; 3
		{
			if(cds_value > 800) pwm_led(0, 0, 255);
 58e:	9f 06       	cpc	r9, r31
 590:	4c f0       	brlt	.+18     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 592:	1b bc       	out	0x2b, r1	; 43
 594:	1a bc       	out	0x2a, r1	; 42
 596:	19 bc       	out	0x29, r1	; 41
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 598:	18 bc       	out	0x28, r1	; 40
 59a:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 59c:	f0 e0       	ldi	r31, 0x00	; 0
 59e:	51 82       	std	Z+1, r5	; 0x01
	OCR1C = B;
 5a0:	40 82       	st	Z, r4
 5a2:	2e c0       	rjmp	.+92     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5a4:	f9 e5       	ldi	r31, 0x59	; 89
 5a6:	8f 16       	cp	r8, r31
 5a8:	f2 e0       	ldi	r31, 0x02	; 2
			else if(cds_value > 600) pwm_led(0, 255, 0);
 5aa:	9f 06       	cpc	r9, r31
 5ac:	4c f0       	brlt	.+18     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 5ae:	1b bc       	out	0x2b, r1	; 43
 5b0:	1a bc       	out	0x2a, r1	; 42
 5b2:	59 bc       	out	0x29, r5	; 41
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 5b4:	48 bc       	out	0x28, r4	; 40
 5b6:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 5b8:	f0 e0       	ldi	r31, 0x00	; 0
 5ba:	11 82       	std	Z+1, r1	; 0x01
	OCR1C = B;
 5bc:	10 82       	st	Z, r1
 5be:	20 c0       	rjmp	.+64     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5c0:	5b bc       	out	0x2b, r5	; 43
 5c2:	4a bc       	out	0x2a, r4	; 42
 5c4:	19 bc       	out	0x29, r1	; 41
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 5c6:	18 bc       	out	0x28, r1	; 40
 5c8:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 5ca:	f0 e0       	ldi	r31, 0x00	; 0
 5cc:	11 82       	std	Z+1, r1	; 0x01
	OCR1C = B;
 5ce:	10 82       	st	Z, r1
 5d0:	17 c0       	rjmp	.+46     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5d2:	03 30       	cpi	r16, 0x03	; 3
 5d4:	11 05       	cpc	r17, r1
 5d6:	a1 f4       	brne	.+40     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
			else pwm_led(255, 0, 0);
		}
		else if(mode == 3) pwm_led(set_R, set_G, set_B); // 모드 3 RGB LED 출력
 5d8:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <set_B>
 5dc:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <set_B+0x1>
 5e0:	20 91 42 01 	lds	r18, 0x0142	; 0x800142 <set_G>
 5e4:	30 91 43 01 	lds	r19, 0x0143	; 0x800143 <set_G+0x1>
 5e8:	40 91 44 01 	lds	r20, 0x0144	; 0x800144 <set_R>
 5ec:	50 91 45 01 	lds	r21, 0x0145	; 0x800145 <set_R+0x1>
	OCR1C = 100;
}

void pwm_led(int R, int G, int B)
{
	OCR1A = R;
 5f0:	5b bd       	out	0x2b, r21	; 43
 5f2:	4a bd       	out	0x2a, r20	; 42
 5f4:	39 bd       	out	0x29, r19	; 41
 5f6:	28 bd       	out	0x28, r18	; 40
 5f8:	e8 e7       	ldi	r30, 0x78	; 120
	OCR1B = G;
 5fa:	f0 e0       	ldi	r31, 0x00	; 0
 5fc:	91 83       	std	Z+1, r25	; 0x01
	OCR1C = B;
 5fe:	80 83       	st	Z, r24
 600:	8f e3       	ldi	r24, 0x3F	; 63
 602:	9c e9       	ldi	r25, 0x9C	; 156
 604:	01 97       	sbiw	r24, 0x01	; 1
 606:	f1 f7       	brne	.-4      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 608:	00 c0       	rjmp	.+0      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 60a:	00 00       	nop
 60c:	9f ef       	ldi	r25, 0xFF	; 255
 60e:	e9 1a       	sub	r14, r25
 610:	f9 0a       	sbc	r15, r25
		
		_delay_ms(10); // 0.01초 딜레이
		time_cnt++;
 612:	7e ce       	rjmp	.-772    	; 0x310 <main+0x5c>

00000614 <__vector_18>:
 614:	1f 92       	push	r1
 616:	0f 92       	push	r0
    }
 618:	0f b6       	in	r0, 0x3f	; 63
}
ISR(USART0_RX_vect)
{
 61a:	0f 92       	push	r0
 61c:	11 24       	eor	r1, r1
 61e:	0b b6       	in	r0, 0x3b	; 59
 620:	0f 92       	push	r0
 622:	2f 93       	push	r18
 624:	3f 93       	push	r19
 626:	4f 93       	push	r20
 628:	5f 93       	push	r21
 62a:	6f 93       	push	r22
 62c:	7f 93       	push	r23
 62e:	8f 93       	push	r24
 630:	9f 93       	push	r25
 632:	af 93       	push	r26
 634:	bf 93       	push	r27
 636:	ef 93       	push	r30
 638:	ff 93       	push	r31
	unsigned char buff = UDR0; // UDR0에 레지스터에 데이터가 저장
 63a:	8c b1       	in	r24, 0x0c	; 12
	
	if(buff == 0x02)
 63c:	82 30       	cpi	r24, 0x02	; 2
 63e:	c9 f4       	brne	.+50     	; 0x672 <__vector_18+0x5e>
	{
		uart_state = 1; // uart로 데이터 수신 상태
 640:	81 e0       	ldi	r24, 0x01	; 1
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	90 93 3b 01 	sts	0x013B, r25	; 0x80013b <__data_end+0x1>
 648:	80 93 3a 01 	sts	0x013A, r24	; 0x80013a <__data_end>
		memset(uart_buff, 0, strlen(uart_buff));
 64c:	e7 e4       	ldi	r30, 0x47	; 71
 64e:	f1 e0       	ldi	r31, 0x01	; 1
 650:	01 90       	ld	r0, Z+
 652:	00 20       	and	r0, r0
 654:	e9 f7       	brne	.-6      	; 0x650 <__vector_18+0x3c>
 656:	31 97       	sbiw	r30, 0x01	; 1
 658:	af 01       	movw	r20, r30
 65a:	47 54       	subi	r20, 0x47	; 71
 65c:	51 40       	sbci	r21, 0x01	; 1
 65e:	60 e0       	ldi	r22, 0x00	; 0
 660:	70 e0       	ldi	r23, 0x00	; 0
 662:	87 e4       	ldi	r24, 0x47	; 71
 664:	91 e0       	ldi	r25, 0x01	; 1
 666:	3a d0       	rcall	.+116    	; 0x6dc <memset>
		uart_i = 0;
 668:	10 92 3d 01 	sts	0x013D, r1	; 0x80013d <uart_i+0x1>
 66c:	10 92 3c 01 	sts	0x013C, r1	; 0x80013c <uart_i>
		return;
 670:	22 c0       	rjmp	.+68     	; 0x6b6 <__vector_18+0xa2>
	}
	else if(buff == 0x03)
 672:	83 30       	cpi	r24, 0x03	; 3
 674:	59 f4       	brne	.+22     	; 0x68c <__vector_18+0x78>
	{
		uart_state = 0;
 676:	10 92 3b 01 	sts	0x013B, r1	; 0x80013b <__data_end+0x1>
 67a:	10 92 3a 01 	sts	0x013A, r1	; 0x80013a <__data_end>
		uart_finish = 1; // uart로 데이터 수신 완료
 67e:	81 e0       	ldi	r24, 0x01	; 1
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	90 93 3f 01 	sts	0x013F, r25	; 0x80013f <uart_finish+0x1>
 686:	80 93 3e 01 	sts	0x013E, r24	; 0x80013e <uart_finish>
 68a:	15 c0       	rjmp	.+42     	; 0x6b6 <__vector_18+0xa2>
	}
	
	if(uart_state)
 68c:	20 91 3a 01 	lds	r18, 0x013A	; 0x80013a <__data_end>
 690:	30 91 3b 01 	lds	r19, 0x013B	; 0x80013b <__data_end+0x1>
 694:	23 2b       	or	r18, r19
 696:	79 f0       	breq	.+30     	; 0x6b6 <__vector_18+0xa2>
	{
		uart_buff[uart_i++] = buff;
 698:	20 91 3c 01 	lds	r18, 0x013C	; 0x80013c <uart_i>
 69c:	30 91 3d 01 	lds	r19, 0x013D	; 0x80013d <uart_i+0x1>
 6a0:	a9 01       	movw	r20, r18
 6a2:	4f 5f       	subi	r20, 0xFF	; 255
 6a4:	5f 4f       	sbci	r21, 0xFF	; 255
 6a6:	50 93 3d 01 	sts	0x013D, r21	; 0x80013d <uart_i+0x1>
 6aa:	40 93 3c 01 	sts	0x013C, r20	; 0x80013c <uart_i>
 6ae:	f9 01       	movw	r30, r18
 6b0:	e9 5b       	subi	r30, 0xB9	; 185
 6b2:	fe 4f       	sbci	r31, 0xFE	; 254
 6b4:	80 83       	st	Z, r24
	}
}
 6b6:	ff 91       	pop	r31
 6b8:	ef 91       	pop	r30
 6ba:	bf 91       	pop	r27
 6bc:	af 91       	pop	r26
 6be:	9f 91       	pop	r25
 6c0:	8f 91       	pop	r24
 6c2:	7f 91       	pop	r23
 6c4:	6f 91       	pop	r22
 6c6:	5f 91       	pop	r21
 6c8:	4f 91       	pop	r20
 6ca:	3f 91       	pop	r19
 6cc:	2f 91       	pop	r18
 6ce:	0f 90       	pop	r0
 6d0:	0b be       	out	0x3b, r0	; 59
 6d2:	0f 90       	pop	r0
 6d4:	0f be       	out	0x3f, r0	; 63
 6d6:	0f 90       	pop	r0
 6d8:	1f 90       	pop	r1
 6da:	18 95       	reti

000006dc <memset>:
 6dc:	dc 01       	movw	r26, r24
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <memset+0x6>
 6e0:	6d 93       	st	X+, r22
 6e2:	41 50       	subi	r20, 0x01	; 1
 6e4:	50 40       	sbci	r21, 0x00	; 0
 6e6:	e0 f7       	brcc	.-8      	; 0x6e0 <memset+0x4>
 6e8:	08 95       	ret

000006ea <sprintf>:
 6ea:	0f 93       	push	r16
 6ec:	1f 93       	push	r17
 6ee:	cf 93       	push	r28
 6f0:	df 93       	push	r29
 6f2:	cd b7       	in	r28, 0x3d	; 61
 6f4:	de b7       	in	r29, 0x3e	; 62
 6f6:	2e 97       	sbiw	r28, 0x0e	; 14
 6f8:	0f b6       	in	r0, 0x3f	; 63
 6fa:	f8 94       	cli
 6fc:	de bf       	out	0x3e, r29	; 62
 6fe:	0f be       	out	0x3f, r0	; 63
 700:	cd bf       	out	0x3d, r28	; 61
 702:	0d 89       	ldd	r16, Y+21	; 0x15
 704:	1e 89       	ldd	r17, Y+22	; 0x16
 706:	86 e0       	ldi	r24, 0x06	; 6
 708:	8c 83       	std	Y+4, r24	; 0x04
 70a:	1a 83       	std	Y+2, r17	; 0x02
 70c:	09 83       	std	Y+1, r16	; 0x01
 70e:	8f ef       	ldi	r24, 0xFF	; 255
 710:	9f e7       	ldi	r25, 0x7F	; 127
 712:	9e 83       	std	Y+6, r25	; 0x06
 714:	8d 83       	std	Y+5, r24	; 0x05
 716:	ae 01       	movw	r20, r28
 718:	47 5e       	subi	r20, 0xE7	; 231
 71a:	5f 4f       	sbci	r21, 0xFF	; 255
 71c:	6f 89       	ldd	r22, Y+23	; 0x17
 71e:	78 8d       	ldd	r23, Y+24	; 0x18
 720:	ce 01       	movw	r24, r28
 722:	01 96       	adiw	r24, 0x01	; 1
 724:	10 d0       	rcall	.+32     	; 0x746 <vfprintf>
 726:	ef 81       	ldd	r30, Y+7	; 0x07
 728:	f8 85       	ldd	r31, Y+8	; 0x08
 72a:	e0 0f       	add	r30, r16
 72c:	f1 1f       	adc	r31, r17
 72e:	10 82       	st	Z, r1
 730:	2e 96       	adiw	r28, 0x0e	; 14
 732:	0f b6       	in	r0, 0x3f	; 63
 734:	f8 94       	cli
 736:	de bf       	out	0x3e, r29	; 62
 738:	0f be       	out	0x3f, r0	; 63
 73a:	cd bf       	out	0x3d, r28	; 61
 73c:	df 91       	pop	r29
 73e:	cf 91       	pop	r28
 740:	1f 91       	pop	r17
 742:	0f 91       	pop	r16
 744:	08 95       	ret

00000746 <vfprintf>:
 746:	2f 92       	push	r2
 748:	3f 92       	push	r3
 74a:	4f 92       	push	r4
 74c:	5f 92       	push	r5
 74e:	6f 92       	push	r6
 750:	7f 92       	push	r7
 752:	8f 92       	push	r8
 754:	9f 92       	push	r9
 756:	af 92       	push	r10
 758:	bf 92       	push	r11
 75a:	cf 92       	push	r12
 75c:	df 92       	push	r13
 75e:	ef 92       	push	r14
 760:	ff 92       	push	r15
 762:	0f 93       	push	r16
 764:	1f 93       	push	r17
 766:	cf 93       	push	r28
 768:	df 93       	push	r29
 76a:	cd b7       	in	r28, 0x3d	; 61
 76c:	de b7       	in	r29, 0x3e	; 62
 76e:	2b 97       	sbiw	r28, 0x0b	; 11
 770:	0f b6       	in	r0, 0x3f	; 63
 772:	f8 94       	cli
 774:	de bf       	out	0x3e, r29	; 62
 776:	0f be       	out	0x3f, r0	; 63
 778:	cd bf       	out	0x3d, r28	; 61
 77a:	6c 01       	movw	r12, r24
 77c:	7b 01       	movw	r14, r22
 77e:	8a 01       	movw	r16, r20
 780:	fc 01       	movw	r30, r24
 782:	17 82       	std	Z+7, r1	; 0x07
 784:	16 82       	std	Z+6, r1	; 0x06
 786:	83 81       	ldd	r24, Z+3	; 0x03
 788:	81 ff       	sbrs	r24, 1
 78a:	bf c1       	rjmp	.+894    	; 0xb0a <vfprintf+0x3c4>
 78c:	ce 01       	movw	r24, r28
 78e:	01 96       	adiw	r24, 0x01	; 1
 790:	3c 01       	movw	r6, r24
 792:	f6 01       	movw	r30, r12
 794:	93 81       	ldd	r25, Z+3	; 0x03
 796:	f7 01       	movw	r30, r14
 798:	93 fd       	sbrc	r25, 3
 79a:	85 91       	lpm	r24, Z+
 79c:	93 ff       	sbrs	r25, 3
 79e:	81 91       	ld	r24, Z+
 7a0:	7f 01       	movw	r14, r30
 7a2:	88 23       	and	r24, r24
 7a4:	09 f4       	brne	.+2      	; 0x7a8 <vfprintf+0x62>
 7a6:	ad c1       	rjmp	.+858    	; 0xb02 <vfprintf+0x3bc>
 7a8:	85 32       	cpi	r24, 0x25	; 37
 7aa:	39 f4       	brne	.+14     	; 0x7ba <vfprintf+0x74>
 7ac:	93 fd       	sbrc	r25, 3
 7ae:	85 91       	lpm	r24, Z+
 7b0:	93 ff       	sbrs	r25, 3
 7b2:	81 91       	ld	r24, Z+
 7b4:	7f 01       	movw	r14, r30
 7b6:	85 32       	cpi	r24, 0x25	; 37
 7b8:	21 f4       	brne	.+8      	; 0x7c2 <vfprintf+0x7c>
 7ba:	b6 01       	movw	r22, r12
 7bc:	90 e0       	ldi	r25, 0x00	; 0
 7be:	d6 d1       	rcall	.+940    	; 0xb6c <fputc>
 7c0:	e8 cf       	rjmp	.-48     	; 0x792 <vfprintf+0x4c>
 7c2:	91 2c       	mov	r9, r1
 7c4:	21 2c       	mov	r2, r1
 7c6:	31 2c       	mov	r3, r1
 7c8:	ff e1       	ldi	r31, 0x1F	; 31
 7ca:	f3 15       	cp	r31, r3
 7cc:	d8 f0       	brcs	.+54     	; 0x804 <vfprintf+0xbe>
 7ce:	8b 32       	cpi	r24, 0x2B	; 43
 7d0:	79 f0       	breq	.+30     	; 0x7f0 <vfprintf+0xaa>
 7d2:	38 f4       	brcc	.+14     	; 0x7e2 <vfprintf+0x9c>
 7d4:	80 32       	cpi	r24, 0x20	; 32
 7d6:	79 f0       	breq	.+30     	; 0x7f6 <vfprintf+0xb0>
 7d8:	83 32       	cpi	r24, 0x23	; 35
 7da:	a1 f4       	brne	.+40     	; 0x804 <vfprintf+0xbe>
 7dc:	23 2d       	mov	r18, r3
 7de:	20 61       	ori	r18, 0x10	; 16
 7e0:	1d c0       	rjmp	.+58     	; 0x81c <vfprintf+0xd6>
 7e2:	8d 32       	cpi	r24, 0x2D	; 45
 7e4:	61 f0       	breq	.+24     	; 0x7fe <vfprintf+0xb8>
 7e6:	80 33       	cpi	r24, 0x30	; 48
 7e8:	69 f4       	brne	.+26     	; 0x804 <vfprintf+0xbe>
 7ea:	23 2d       	mov	r18, r3
 7ec:	21 60       	ori	r18, 0x01	; 1
 7ee:	16 c0       	rjmp	.+44     	; 0x81c <vfprintf+0xd6>
 7f0:	83 2d       	mov	r24, r3
 7f2:	82 60       	ori	r24, 0x02	; 2
 7f4:	38 2e       	mov	r3, r24
 7f6:	e3 2d       	mov	r30, r3
 7f8:	e4 60       	ori	r30, 0x04	; 4
 7fa:	3e 2e       	mov	r3, r30
 7fc:	2a c0       	rjmp	.+84     	; 0x852 <vfprintf+0x10c>
 7fe:	f3 2d       	mov	r31, r3
 800:	f8 60       	ori	r31, 0x08	; 8
 802:	1d c0       	rjmp	.+58     	; 0x83e <vfprintf+0xf8>
 804:	37 fc       	sbrc	r3, 7
 806:	2d c0       	rjmp	.+90     	; 0x862 <vfprintf+0x11c>
 808:	20 ed       	ldi	r18, 0xD0	; 208
 80a:	28 0f       	add	r18, r24
 80c:	2a 30       	cpi	r18, 0x0A	; 10
 80e:	40 f0       	brcs	.+16     	; 0x820 <vfprintf+0xda>
 810:	8e 32       	cpi	r24, 0x2E	; 46
 812:	b9 f4       	brne	.+46     	; 0x842 <vfprintf+0xfc>
 814:	36 fc       	sbrc	r3, 6
 816:	75 c1       	rjmp	.+746    	; 0xb02 <vfprintf+0x3bc>
 818:	23 2d       	mov	r18, r3
 81a:	20 64       	ori	r18, 0x40	; 64
 81c:	32 2e       	mov	r3, r18
 81e:	19 c0       	rjmp	.+50     	; 0x852 <vfprintf+0x10c>
 820:	36 fe       	sbrs	r3, 6
 822:	06 c0       	rjmp	.+12     	; 0x830 <vfprintf+0xea>
 824:	8a e0       	ldi	r24, 0x0A	; 10
 826:	98 9e       	mul	r9, r24
 828:	20 0d       	add	r18, r0
 82a:	11 24       	eor	r1, r1
 82c:	92 2e       	mov	r9, r18
 82e:	11 c0       	rjmp	.+34     	; 0x852 <vfprintf+0x10c>
 830:	ea e0       	ldi	r30, 0x0A	; 10
 832:	2e 9e       	mul	r2, r30
 834:	20 0d       	add	r18, r0
 836:	11 24       	eor	r1, r1
 838:	22 2e       	mov	r2, r18
 83a:	f3 2d       	mov	r31, r3
 83c:	f0 62       	ori	r31, 0x20	; 32
 83e:	3f 2e       	mov	r3, r31
 840:	08 c0       	rjmp	.+16     	; 0x852 <vfprintf+0x10c>
 842:	8c 36       	cpi	r24, 0x6C	; 108
 844:	21 f4       	brne	.+8      	; 0x84e <vfprintf+0x108>
 846:	83 2d       	mov	r24, r3
 848:	80 68       	ori	r24, 0x80	; 128
 84a:	38 2e       	mov	r3, r24
 84c:	02 c0       	rjmp	.+4      	; 0x852 <vfprintf+0x10c>
 84e:	88 36       	cpi	r24, 0x68	; 104
 850:	41 f4       	brne	.+16     	; 0x862 <vfprintf+0x11c>
 852:	f7 01       	movw	r30, r14
 854:	93 fd       	sbrc	r25, 3
 856:	85 91       	lpm	r24, Z+
 858:	93 ff       	sbrs	r25, 3
 85a:	81 91       	ld	r24, Z+
 85c:	7f 01       	movw	r14, r30
 85e:	81 11       	cpse	r24, r1
 860:	b3 cf       	rjmp	.-154    	; 0x7c8 <vfprintf+0x82>
 862:	98 2f       	mov	r25, r24
 864:	9f 7d       	andi	r25, 0xDF	; 223
 866:	95 54       	subi	r25, 0x45	; 69
 868:	93 30       	cpi	r25, 0x03	; 3
 86a:	28 f4       	brcc	.+10     	; 0x876 <vfprintf+0x130>
 86c:	0c 5f       	subi	r16, 0xFC	; 252
 86e:	1f 4f       	sbci	r17, 0xFF	; 255
 870:	9f e3       	ldi	r25, 0x3F	; 63
 872:	99 83       	std	Y+1, r25	; 0x01
 874:	0d c0       	rjmp	.+26     	; 0x890 <vfprintf+0x14a>
 876:	83 36       	cpi	r24, 0x63	; 99
 878:	31 f0       	breq	.+12     	; 0x886 <vfprintf+0x140>
 87a:	83 37       	cpi	r24, 0x73	; 115
 87c:	71 f0       	breq	.+28     	; 0x89a <vfprintf+0x154>
 87e:	83 35       	cpi	r24, 0x53	; 83
 880:	09 f0       	breq	.+2      	; 0x884 <vfprintf+0x13e>
 882:	55 c0       	rjmp	.+170    	; 0x92e <vfprintf+0x1e8>
 884:	20 c0       	rjmp	.+64     	; 0x8c6 <vfprintf+0x180>
 886:	f8 01       	movw	r30, r16
 888:	80 81       	ld	r24, Z
 88a:	89 83       	std	Y+1, r24	; 0x01
 88c:	0e 5f       	subi	r16, 0xFE	; 254
 88e:	1f 4f       	sbci	r17, 0xFF	; 255
 890:	88 24       	eor	r8, r8
 892:	83 94       	inc	r8
 894:	91 2c       	mov	r9, r1
 896:	53 01       	movw	r10, r6
 898:	12 c0       	rjmp	.+36     	; 0x8be <vfprintf+0x178>
 89a:	28 01       	movw	r4, r16
 89c:	f2 e0       	ldi	r31, 0x02	; 2
 89e:	4f 0e       	add	r4, r31
 8a0:	51 1c       	adc	r5, r1
 8a2:	f8 01       	movw	r30, r16
 8a4:	a0 80       	ld	r10, Z
 8a6:	b1 80       	ldd	r11, Z+1	; 0x01
 8a8:	36 fe       	sbrs	r3, 6
 8aa:	03 c0       	rjmp	.+6      	; 0x8b2 <vfprintf+0x16c>
 8ac:	69 2d       	mov	r22, r9
 8ae:	70 e0       	ldi	r23, 0x00	; 0
 8b0:	02 c0       	rjmp	.+4      	; 0x8b6 <vfprintf+0x170>
 8b2:	6f ef       	ldi	r22, 0xFF	; 255
 8b4:	7f ef       	ldi	r23, 0xFF	; 255
 8b6:	c5 01       	movw	r24, r10
 8b8:	4e d1       	rcall	.+668    	; 0xb56 <strnlen>
 8ba:	4c 01       	movw	r8, r24
 8bc:	82 01       	movw	r16, r4
 8be:	f3 2d       	mov	r31, r3
 8c0:	ff 77       	andi	r31, 0x7F	; 127
 8c2:	3f 2e       	mov	r3, r31
 8c4:	15 c0       	rjmp	.+42     	; 0x8f0 <vfprintf+0x1aa>
 8c6:	28 01       	movw	r4, r16
 8c8:	22 e0       	ldi	r18, 0x02	; 2
 8ca:	42 0e       	add	r4, r18
 8cc:	51 1c       	adc	r5, r1
 8ce:	f8 01       	movw	r30, r16
 8d0:	a0 80       	ld	r10, Z
 8d2:	b1 80       	ldd	r11, Z+1	; 0x01
 8d4:	36 fe       	sbrs	r3, 6
 8d6:	03 c0       	rjmp	.+6      	; 0x8de <vfprintf+0x198>
 8d8:	69 2d       	mov	r22, r9
 8da:	70 e0       	ldi	r23, 0x00	; 0
 8dc:	02 c0       	rjmp	.+4      	; 0x8e2 <vfprintf+0x19c>
 8de:	6f ef       	ldi	r22, 0xFF	; 255
 8e0:	7f ef       	ldi	r23, 0xFF	; 255
 8e2:	c5 01       	movw	r24, r10
 8e4:	2d d1       	rcall	.+602    	; 0xb40 <strnlen_P>
 8e6:	4c 01       	movw	r8, r24
 8e8:	f3 2d       	mov	r31, r3
 8ea:	f0 68       	ori	r31, 0x80	; 128
 8ec:	3f 2e       	mov	r3, r31
 8ee:	82 01       	movw	r16, r4
 8f0:	33 fc       	sbrc	r3, 3
 8f2:	19 c0       	rjmp	.+50     	; 0x926 <vfprintf+0x1e0>
 8f4:	82 2d       	mov	r24, r2
 8f6:	90 e0       	ldi	r25, 0x00	; 0
 8f8:	88 16       	cp	r8, r24
 8fa:	99 06       	cpc	r9, r25
 8fc:	a0 f4       	brcc	.+40     	; 0x926 <vfprintf+0x1e0>
 8fe:	b6 01       	movw	r22, r12
 900:	80 e2       	ldi	r24, 0x20	; 32
 902:	90 e0       	ldi	r25, 0x00	; 0
 904:	33 d1       	rcall	.+614    	; 0xb6c <fputc>
 906:	2a 94       	dec	r2
 908:	f5 cf       	rjmp	.-22     	; 0x8f4 <vfprintf+0x1ae>
 90a:	f5 01       	movw	r30, r10
 90c:	37 fc       	sbrc	r3, 7
 90e:	85 91       	lpm	r24, Z+
 910:	37 fe       	sbrs	r3, 7
 912:	81 91       	ld	r24, Z+
 914:	5f 01       	movw	r10, r30
 916:	b6 01       	movw	r22, r12
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	28 d1       	rcall	.+592    	; 0xb6c <fputc>
 91c:	21 10       	cpse	r2, r1
 91e:	2a 94       	dec	r2
 920:	21 e0       	ldi	r18, 0x01	; 1
 922:	82 1a       	sub	r8, r18
 924:	91 08       	sbc	r9, r1
 926:	81 14       	cp	r8, r1
 928:	91 04       	cpc	r9, r1
 92a:	79 f7       	brne	.-34     	; 0x90a <vfprintf+0x1c4>
 92c:	e1 c0       	rjmp	.+450    	; 0xaf0 <vfprintf+0x3aa>
 92e:	84 36       	cpi	r24, 0x64	; 100
 930:	11 f0       	breq	.+4      	; 0x936 <vfprintf+0x1f0>
 932:	89 36       	cpi	r24, 0x69	; 105
 934:	39 f5       	brne	.+78     	; 0x984 <vfprintf+0x23e>
 936:	f8 01       	movw	r30, r16
 938:	37 fe       	sbrs	r3, 7
 93a:	07 c0       	rjmp	.+14     	; 0x94a <vfprintf+0x204>
 93c:	60 81       	ld	r22, Z
 93e:	71 81       	ldd	r23, Z+1	; 0x01
 940:	82 81       	ldd	r24, Z+2	; 0x02
 942:	93 81       	ldd	r25, Z+3	; 0x03
 944:	0c 5f       	subi	r16, 0xFC	; 252
 946:	1f 4f       	sbci	r17, 0xFF	; 255
 948:	08 c0       	rjmp	.+16     	; 0x95a <vfprintf+0x214>
 94a:	60 81       	ld	r22, Z
 94c:	71 81       	ldd	r23, Z+1	; 0x01
 94e:	07 2e       	mov	r0, r23
 950:	00 0c       	add	r0, r0
 952:	88 0b       	sbc	r24, r24
 954:	99 0b       	sbc	r25, r25
 956:	0e 5f       	subi	r16, 0xFE	; 254
 958:	1f 4f       	sbci	r17, 0xFF	; 255
 95a:	f3 2d       	mov	r31, r3
 95c:	ff 76       	andi	r31, 0x6F	; 111
 95e:	3f 2e       	mov	r3, r31
 960:	97 ff       	sbrs	r25, 7
 962:	09 c0       	rjmp	.+18     	; 0x976 <vfprintf+0x230>
 964:	90 95       	com	r25
 966:	80 95       	com	r24
 968:	70 95       	com	r23
 96a:	61 95       	neg	r22
 96c:	7f 4f       	sbci	r23, 0xFF	; 255
 96e:	8f 4f       	sbci	r24, 0xFF	; 255
 970:	9f 4f       	sbci	r25, 0xFF	; 255
 972:	f0 68       	ori	r31, 0x80	; 128
 974:	3f 2e       	mov	r3, r31
 976:	2a e0       	ldi	r18, 0x0A	; 10
 978:	30 e0       	ldi	r19, 0x00	; 0
 97a:	a3 01       	movw	r20, r6
 97c:	33 d1       	rcall	.+614    	; 0xbe4 <__ultoa_invert>
 97e:	88 2e       	mov	r8, r24
 980:	86 18       	sub	r8, r6
 982:	44 c0       	rjmp	.+136    	; 0xa0c <vfprintf+0x2c6>
 984:	85 37       	cpi	r24, 0x75	; 117
 986:	31 f4       	brne	.+12     	; 0x994 <vfprintf+0x24e>
 988:	23 2d       	mov	r18, r3
 98a:	2f 7e       	andi	r18, 0xEF	; 239
 98c:	b2 2e       	mov	r11, r18
 98e:	2a e0       	ldi	r18, 0x0A	; 10
 990:	30 e0       	ldi	r19, 0x00	; 0
 992:	25 c0       	rjmp	.+74     	; 0x9de <vfprintf+0x298>
 994:	93 2d       	mov	r25, r3
 996:	99 7f       	andi	r25, 0xF9	; 249
 998:	b9 2e       	mov	r11, r25
 99a:	8f 36       	cpi	r24, 0x6F	; 111
 99c:	c1 f0       	breq	.+48     	; 0x9ce <vfprintf+0x288>
 99e:	18 f4       	brcc	.+6      	; 0x9a6 <vfprintf+0x260>
 9a0:	88 35       	cpi	r24, 0x58	; 88
 9a2:	79 f0       	breq	.+30     	; 0x9c2 <vfprintf+0x27c>
 9a4:	ae c0       	rjmp	.+348    	; 0xb02 <vfprintf+0x3bc>
 9a6:	80 37       	cpi	r24, 0x70	; 112
 9a8:	19 f0       	breq	.+6      	; 0x9b0 <vfprintf+0x26a>
 9aa:	88 37       	cpi	r24, 0x78	; 120
 9ac:	21 f0       	breq	.+8      	; 0x9b6 <vfprintf+0x270>
 9ae:	a9 c0       	rjmp	.+338    	; 0xb02 <vfprintf+0x3bc>
 9b0:	e9 2f       	mov	r30, r25
 9b2:	e0 61       	ori	r30, 0x10	; 16
 9b4:	be 2e       	mov	r11, r30
 9b6:	b4 fe       	sbrs	r11, 4
 9b8:	0d c0       	rjmp	.+26     	; 0x9d4 <vfprintf+0x28e>
 9ba:	fb 2d       	mov	r31, r11
 9bc:	f4 60       	ori	r31, 0x04	; 4
 9be:	bf 2e       	mov	r11, r31
 9c0:	09 c0       	rjmp	.+18     	; 0x9d4 <vfprintf+0x28e>
 9c2:	34 fe       	sbrs	r3, 4
 9c4:	0a c0       	rjmp	.+20     	; 0x9da <vfprintf+0x294>
 9c6:	29 2f       	mov	r18, r25
 9c8:	26 60       	ori	r18, 0x06	; 6
 9ca:	b2 2e       	mov	r11, r18
 9cc:	06 c0       	rjmp	.+12     	; 0x9da <vfprintf+0x294>
 9ce:	28 e0       	ldi	r18, 0x08	; 8
 9d0:	30 e0       	ldi	r19, 0x00	; 0
 9d2:	05 c0       	rjmp	.+10     	; 0x9de <vfprintf+0x298>
 9d4:	20 e1       	ldi	r18, 0x10	; 16
 9d6:	30 e0       	ldi	r19, 0x00	; 0
 9d8:	02 c0       	rjmp	.+4      	; 0x9de <vfprintf+0x298>
 9da:	20 e1       	ldi	r18, 0x10	; 16
 9dc:	32 e0       	ldi	r19, 0x02	; 2
 9de:	f8 01       	movw	r30, r16
 9e0:	b7 fe       	sbrs	r11, 7
 9e2:	07 c0       	rjmp	.+14     	; 0x9f2 <vfprintf+0x2ac>
 9e4:	60 81       	ld	r22, Z
 9e6:	71 81       	ldd	r23, Z+1	; 0x01
 9e8:	82 81       	ldd	r24, Z+2	; 0x02
 9ea:	93 81       	ldd	r25, Z+3	; 0x03
 9ec:	0c 5f       	subi	r16, 0xFC	; 252
 9ee:	1f 4f       	sbci	r17, 0xFF	; 255
 9f0:	06 c0       	rjmp	.+12     	; 0x9fe <vfprintf+0x2b8>
 9f2:	60 81       	ld	r22, Z
 9f4:	71 81       	ldd	r23, Z+1	; 0x01
 9f6:	80 e0       	ldi	r24, 0x00	; 0
 9f8:	90 e0       	ldi	r25, 0x00	; 0
 9fa:	0e 5f       	subi	r16, 0xFE	; 254
 9fc:	1f 4f       	sbci	r17, 0xFF	; 255
 9fe:	a3 01       	movw	r20, r6
 a00:	f1 d0       	rcall	.+482    	; 0xbe4 <__ultoa_invert>
 a02:	88 2e       	mov	r8, r24
 a04:	86 18       	sub	r8, r6
 a06:	fb 2d       	mov	r31, r11
 a08:	ff 77       	andi	r31, 0x7F	; 127
 a0a:	3f 2e       	mov	r3, r31
 a0c:	36 fe       	sbrs	r3, 6
 a0e:	0d c0       	rjmp	.+26     	; 0xa2a <vfprintf+0x2e4>
 a10:	23 2d       	mov	r18, r3
 a12:	2e 7f       	andi	r18, 0xFE	; 254
 a14:	a2 2e       	mov	r10, r18
 a16:	89 14       	cp	r8, r9
 a18:	58 f4       	brcc	.+22     	; 0xa30 <vfprintf+0x2ea>
 a1a:	34 fe       	sbrs	r3, 4
 a1c:	0b c0       	rjmp	.+22     	; 0xa34 <vfprintf+0x2ee>
 a1e:	32 fc       	sbrc	r3, 2
 a20:	09 c0       	rjmp	.+18     	; 0xa34 <vfprintf+0x2ee>
 a22:	83 2d       	mov	r24, r3
 a24:	8e 7e       	andi	r24, 0xEE	; 238
 a26:	a8 2e       	mov	r10, r24
 a28:	05 c0       	rjmp	.+10     	; 0xa34 <vfprintf+0x2ee>
 a2a:	b8 2c       	mov	r11, r8
 a2c:	a3 2c       	mov	r10, r3
 a2e:	03 c0       	rjmp	.+6      	; 0xa36 <vfprintf+0x2f0>
 a30:	b8 2c       	mov	r11, r8
 a32:	01 c0       	rjmp	.+2      	; 0xa36 <vfprintf+0x2f0>
 a34:	b9 2c       	mov	r11, r9
 a36:	a4 fe       	sbrs	r10, 4
 a38:	0f c0       	rjmp	.+30     	; 0xa58 <vfprintf+0x312>
 a3a:	fe 01       	movw	r30, r28
 a3c:	e8 0d       	add	r30, r8
 a3e:	f1 1d       	adc	r31, r1
 a40:	80 81       	ld	r24, Z
 a42:	80 33       	cpi	r24, 0x30	; 48
 a44:	21 f4       	brne	.+8      	; 0xa4e <vfprintf+0x308>
 a46:	9a 2d       	mov	r25, r10
 a48:	99 7e       	andi	r25, 0xE9	; 233
 a4a:	a9 2e       	mov	r10, r25
 a4c:	09 c0       	rjmp	.+18     	; 0xa60 <vfprintf+0x31a>
 a4e:	a2 fe       	sbrs	r10, 2
 a50:	06 c0       	rjmp	.+12     	; 0xa5e <vfprintf+0x318>
 a52:	b3 94       	inc	r11
 a54:	b3 94       	inc	r11
 a56:	04 c0       	rjmp	.+8      	; 0xa60 <vfprintf+0x31a>
 a58:	8a 2d       	mov	r24, r10
 a5a:	86 78       	andi	r24, 0x86	; 134
 a5c:	09 f0       	breq	.+2      	; 0xa60 <vfprintf+0x31a>
 a5e:	b3 94       	inc	r11
 a60:	a3 fc       	sbrc	r10, 3
 a62:	10 c0       	rjmp	.+32     	; 0xa84 <vfprintf+0x33e>
 a64:	a0 fe       	sbrs	r10, 0
 a66:	06 c0       	rjmp	.+12     	; 0xa74 <vfprintf+0x32e>
 a68:	b2 14       	cp	r11, r2
 a6a:	80 f4       	brcc	.+32     	; 0xa8c <vfprintf+0x346>
 a6c:	28 0c       	add	r2, r8
 a6e:	92 2c       	mov	r9, r2
 a70:	9b 18       	sub	r9, r11
 a72:	0d c0       	rjmp	.+26     	; 0xa8e <vfprintf+0x348>
 a74:	b2 14       	cp	r11, r2
 a76:	58 f4       	brcc	.+22     	; 0xa8e <vfprintf+0x348>
 a78:	b6 01       	movw	r22, r12
 a7a:	80 e2       	ldi	r24, 0x20	; 32
 a7c:	90 e0       	ldi	r25, 0x00	; 0
 a7e:	76 d0       	rcall	.+236    	; 0xb6c <fputc>
 a80:	b3 94       	inc	r11
 a82:	f8 cf       	rjmp	.-16     	; 0xa74 <vfprintf+0x32e>
 a84:	b2 14       	cp	r11, r2
 a86:	18 f4       	brcc	.+6      	; 0xa8e <vfprintf+0x348>
 a88:	2b 18       	sub	r2, r11
 a8a:	02 c0       	rjmp	.+4      	; 0xa90 <vfprintf+0x34a>
 a8c:	98 2c       	mov	r9, r8
 a8e:	21 2c       	mov	r2, r1
 a90:	a4 fe       	sbrs	r10, 4
 a92:	0f c0       	rjmp	.+30     	; 0xab2 <vfprintf+0x36c>
 a94:	b6 01       	movw	r22, r12
 a96:	80 e3       	ldi	r24, 0x30	; 48
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	68 d0       	rcall	.+208    	; 0xb6c <fputc>
 a9c:	a2 fe       	sbrs	r10, 2
 a9e:	16 c0       	rjmp	.+44     	; 0xacc <vfprintf+0x386>
 aa0:	a1 fc       	sbrc	r10, 1
 aa2:	03 c0       	rjmp	.+6      	; 0xaaa <vfprintf+0x364>
 aa4:	88 e7       	ldi	r24, 0x78	; 120
 aa6:	90 e0       	ldi	r25, 0x00	; 0
 aa8:	02 c0       	rjmp	.+4      	; 0xaae <vfprintf+0x368>
 aaa:	88 e5       	ldi	r24, 0x58	; 88
 aac:	90 e0       	ldi	r25, 0x00	; 0
 aae:	b6 01       	movw	r22, r12
 ab0:	0c c0       	rjmp	.+24     	; 0xaca <vfprintf+0x384>
 ab2:	8a 2d       	mov	r24, r10
 ab4:	86 78       	andi	r24, 0x86	; 134
 ab6:	51 f0       	breq	.+20     	; 0xacc <vfprintf+0x386>
 ab8:	a1 fe       	sbrs	r10, 1
 aba:	02 c0       	rjmp	.+4      	; 0xac0 <vfprintf+0x37a>
 abc:	8b e2       	ldi	r24, 0x2B	; 43
 abe:	01 c0       	rjmp	.+2      	; 0xac2 <vfprintf+0x37c>
 ac0:	80 e2       	ldi	r24, 0x20	; 32
 ac2:	a7 fc       	sbrc	r10, 7
 ac4:	8d e2       	ldi	r24, 0x2D	; 45
 ac6:	b6 01       	movw	r22, r12
 ac8:	90 e0       	ldi	r25, 0x00	; 0
 aca:	50 d0       	rcall	.+160    	; 0xb6c <fputc>
 acc:	89 14       	cp	r8, r9
 ace:	30 f4       	brcc	.+12     	; 0xadc <vfprintf+0x396>
 ad0:	b6 01       	movw	r22, r12
 ad2:	80 e3       	ldi	r24, 0x30	; 48
 ad4:	90 e0       	ldi	r25, 0x00	; 0
 ad6:	4a d0       	rcall	.+148    	; 0xb6c <fputc>
 ad8:	9a 94       	dec	r9
 ada:	f8 cf       	rjmp	.-16     	; 0xacc <vfprintf+0x386>
 adc:	8a 94       	dec	r8
 ade:	f3 01       	movw	r30, r6
 ae0:	e8 0d       	add	r30, r8
 ae2:	f1 1d       	adc	r31, r1
 ae4:	80 81       	ld	r24, Z
 ae6:	b6 01       	movw	r22, r12
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	40 d0       	rcall	.+128    	; 0xb6c <fputc>
 aec:	81 10       	cpse	r8, r1
 aee:	f6 cf       	rjmp	.-20     	; 0xadc <vfprintf+0x396>
 af0:	22 20       	and	r2, r2
 af2:	09 f4       	brne	.+2      	; 0xaf6 <vfprintf+0x3b0>
 af4:	4e ce       	rjmp	.-868    	; 0x792 <vfprintf+0x4c>
 af6:	b6 01       	movw	r22, r12
 af8:	80 e2       	ldi	r24, 0x20	; 32
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	37 d0       	rcall	.+110    	; 0xb6c <fputc>
 afe:	2a 94       	dec	r2
 b00:	f7 cf       	rjmp	.-18     	; 0xaf0 <vfprintf+0x3aa>
 b02:	f6 01       	movw	r30, r12
 b04:	86 81       	ldd	r24, Z+6	; 0x06
 b06:	97 81       	ldd	r25, Z+7	; 0x07
 b08:	02 c0       	rjmp	.+4      	; 0xb0e <vfprintf+0x3c8>
 b0a:	8f ef       	ldi	r24, 0xFF	; 255
 b0c:	9f ef       	ldi	r25, 0xFF	; 255
 b0e:	2b 96       	adiw	r28, 0x0b	; 11
 b10:	0f b6       	in	r0, 0x3f	; 63
 b12:	f8 94       	cli
 b14:	de bf       	out	0x3e, r29	; 62
 b16:	0f be       	out	0x3f, r0	; 63
 b18:	cd bf       	out	0x3d, r28	; 61
 b1a:	df 91       	pop	r29
 b1c:	cf 91       	pop	r28
 b1e:	1f 91       	pop	r17
 b20:	0f 91       	pop	r16
 b22:	ff 90       	pop	r15
 b24:	ef 90       	pop	r14
 b26:	df 90       	pop	r13
 b28:	cf 90       	pop	r12
 b2a:	bf 90       	pop	r11
 b2c:	af 90       	pop	r10
 b2e:	9f 90       	pop	r9
 b30:	8f 90       	pop	r8
 b32:	7f 90       	pop	r7
 b34:	6f 90       	pop	r6
 b36:	5f 90       	pop	r5
 b38:	4f 90       	pop	r4
 b3a:	3f 90       	pop	r3
 b3c:	2f 90       	pop	r2
 b3e:	08 95       	ret

00000b40 <strnlen_P>:
 b40:	fc 01       	movw	r30, r24
 b42:	05 90       	lpm	r0, Z+
 b44:	61 50       	subi	r22, 0x01	; 1
 b46:	70 40       	sbci	r23, 0x00	; 0
 b48:	01 10       	cpse	r0, r1
 b4a:	d8 f7       	brcc	.-10     	; 0xb42 <strnlen_P+0x2>
 b4c:	80 95       	com	r24
 b4e:	90 95       	com	r25
 b50:	8e 0f       	add	r24, r30
 b52:	9f 1f       	adc	r25, r31
 b54:	08 95       	ret

00000b56 <strnlen>:
 b56:	fc 01       	movw	r30, r24
 b58:	61 50       	subi	r22, 0x01	; 1
 b5a:	70 40       	sbci	r23, 0x00	; 0
 b5c:	01 90       	ld	r0, Z+
 b5e:	01 10       	cpse	r0, r1
 b60:	d8 f7       	brcc	.-10     	; 0xb58 <strnlen+0x2>
 b62:	80 95       	com	r24
 b64:	90 95       	com	r25
 b66:	8e 0f       	add	r24, r30
 b68:	9f 1f       	adc	r25, r31
 b6a:	08 95       	ret

00000b6c <fputc>:
 b6c:	0f 93       	push	r16
 b6e:	1f 93       	push	r17
 b70:	cf 93       	push	r28
 b72:	df 93       	push	r29
 b74:	fb 01       	movw	r30, r22
 b76:	23 81       	ldd	r18, Z+3	; 0x03
 b78:	21 fd       	sbrc	r18, 1
 b7a:	03 c0       	rjmp	.+6      	; 0xb82 <fputc+0x16>
 b7c:	8f ef       	ldi	r24, 0xFF	; 255
 b7e:	9f ef       	ldi	r25, 0xFF	; 255
 b80:	2c c0       	rjmp	.+88     	; 0xbda <fputc+0x6e>
 b82:	22 ff       	sbrs	r18, 2
 b84:	16 c0       	rjmp	.+44     	; 0xbb2 <fputc+0x46>
 b86:	46 81       	ldd	r20, Z+6	; 0x06
 b88:	57 81       	ldd	r21, Z+7	; 0x07
 b8a:	24 81       	ldd	r18, Z+4	; 0x04
 b8c:	35 81       	ldd	r19, Z+5	; 0x05
 b8e:	42 17       	cp	r20, r18
 b90:	53 07       	cpc	r21, r19
 b92:	44 f4       	brge	.+16     	; 0xba4 <fputc+0x38>
 b94:	a0 81       	ld	r26, Z
 b96:	b1 81       	ldd	r27, Z+1	; 0x01
 b98:	9d 01       	movw	r18, r26
 b9a:	2f 5f       	subi	r18, 0xFF	; 255
 b9c:	3f 4f       	sbci	r19, 0xFF	; 255
 b9e:	31 83       	std	Z+1, r19	; 0x01
 ba0:	20 83       	st	Z, r18
 ba2:	8c 93       	st	X, r24
 ba4:	26 81       	ldd	r18, Z+6	; 0x06
 ba6:	37 81       	ldd	r19, Z+7	; 0x07
 ba8:	2f 5f       	subi	r18, 0xFF	; 255
 baa:	3f 4f       	sbci	r19, 0xFF	; 255
 bac:	37 83       	std	Z+7, r19	; 0x07
 bae:	26 83       	std	Z+6, r18	; 0x06
 bb0:	14 c0       	rjmp	.+40     	; 0xbda <fputc+0x6e>
 bb2:	8b 01       	movw	r16, r22
 bb4:	ec 01       	movw	r28, r24
 bb6:	fb 01       	movw	r30, r22
 bb8:	00 84       	ldd	r0, Z+8	; 0x08
 bba:	f1 85       	ldd	r31, Z+9	; 0x09
 bbc:	e0 2d       	mov	r30, r0
 bbe:	09 95       	icall
 bc0:	89 2b       	or	r24, r25
 bc2:	e1 f6       	brne	.-72     	; 0xb7c <fputc+0x10>
 bc4:	d8 01       	movw	r26, r16
 bc6:	16 96       	adiw	r26, 0x06	; 6
 bc8:	8d 91       	ld	r24, X+
 bca:	9c 91       	ld	r25, X
 bcc:	17 97       	sbiw	r26, 0x07	; 7
 bce:	01 96       	adiw	r24, 0x01	; 1
 bd0:	17 96       	adiw	r26, 0x07	; 7
 bd2:	9c 93       	st	X, r25
 bd4:	8e 93       	st	-X, r24
 bd6:	16 97       	sbiw	r26, 0x06	; 6
 bd8:	ce 01       	movw	r24, r28
 bda:	df 91       	pop	r29
 bdc:	cf 91       	pop	r28
 bde:	1f 91       	pop	r17
 be0:	0f 91       	pop	r16
 be2:	08 95       	ret

00000be4 <__ultoa_invert>:
 be4:	fa 01       	movw	r30, r20
 be6:	aa 27       	eor	r26, r26
 be8:	28 30       	cpi	r18, 0x08	; 8
 bea:	51 f1       	breq	.+84     	; 0xc40 <__ultoa_invert+0x5c>
 bec:	20 31       	cpi	r18, 0x10	; 16
 bee:	81 f1       	breq	.+96     	; 0xc50 <__ultoa_invert+0x6c>
 bf0:	e8 94       	clt
 bf2:	6f 93       	push	r22
 bf4:	6e 7f       	andi	r22, 0xFE	; 254
 bf6:	6e 5f       	subi	r22, 0xFE	; 254
 bf8:	7f 4f       	sbci	r23, 0xFF	; 255
 bfa:	8f 4f       	sbci	r24, 0xFF	; 255
 bfc:	9f 4f       	sbci	r25, 0xFF	; 255
 bfe:	af 4f       	sbci	r26, 0xFF	; 255
 c00:	b1 e0       	ldi	r27, 0x01	; 1
 c02:	3e d0       	rcall	.+124    	; 0xc80 <__ultoa_invert+0x9c>
 c04:	b4 e0       	ldi	r27, 0x04	; 4
 c06:	3c d0       	rcall	.+120    	; 0xc80 <__ultoa_invert+0x9c>
 c08:	67 0f       	add	r22, r23
 c0a:	78 1f       	adc	r23, r24
 c0c:	89 1f       	adc	r24, r25
 c0e:	9a 1f       	adc	r25, r26
 c10:	a1 1d       	adc	r26, r1
 c12:	68 0f       	add	r22, r24
 c14:	79 1f       	adc	r23, r25
 c16:	8a 1f       	adc	r24, r26
 c18:	91 1d       	adc	r25, r1
 c1a:	a1 1d       	adc	r26, r1
 c1c:	6a 0f       	add	r22, r26
 c1e:	71 1d       	adc	r23, r1
 c20:	81 1d       	adc	r24, r1
 c22:	91 1d       	adc	r25, r1
 c24:	a1 1d       	adc	r26, r1
 c26:	20 d0       	rcall	.+64     	; 0xc68 <__ultoa_invert+0x84>
 c28:	09 f4       	brne	.+2      	; 0xc2c <__ultoa_invert+0x48>
 c2a:	68 94       	set
 c2c:	3f 91       	pop	r19
 c2e:	2a e0       	ldi	r18, 0x0A	; 10
 c30:	26 9f       	mul	r18, r22
 c32:	11 24       	eor	r1, r1
 c34:	30 19       	sub	r19, r0
 c36:	30 5d       	subi	r19, 0xD0	; 208
 c38:	31 93       	st	Z+, r19
 c3a:	de f6       	brtc	.-74     	; 0xbf2 <__ultoa_invert+0xe>
 c3c:	cf 01       	movw	r24, r30
 c3e:	08 95       	ret
 c40:	46 2f       	mov	r20, r22
 c42:	47 70       	andi	r20, 0x07	; 7
 c44:	40 5d       	subi	r20, 0xD0	; 208
 c46:	41 93       	st	Z+, r20
 c48:	b3 e0       	ldi	r27, 0x03	; 3
 c4a:	0f d0       	rcall	.+30     	; 0xc6a <__ultoa_invert+0x86>
 c4c:	c9 f7       	brne	.-14     	; 0xc40 <__ultoa_invert+0x5c>
 c4e:	f6 cf       	rjmp	.-20     	; 0xc3c <__ultoa_invert+0x58>
 c50:	46 2f       	mov	r20, r22
 c52:	4f 70       	andi	r20, 0x0F	; 15
 c54:	40 5d       	subi	r20, 0xD0	; 208
 c56:	4a 33       	cpi	r20, 0x3A	; 58
 c58:	18 f0       	brcs	.+6      	; 0xc60 <__ultoa_invert+0x7c>
 c5a:	49 5d       	subi	r20, 0xD9	; 217
 c5c:	31 fd       	sbrc	r19, 1
 c5e:	40 52       	subi	r20, 0x20	; 32
 c60:	41 93       	st	Z+, r20
 c62:	02 d0       	rcall	.+4      	; 0xc68 <__ultoa_invert+0x84>
 c64:	a9 f7       	brne	.-22     	; 0xc50 <__ultoa_invert+0x6c>
 c66:	ea cf       	rjmp	.-44     	; 0xc3c <__ultoa_invert+0x58>
 c68:	b4 e0       	ldi	r27, 0x04	; 4
 c6a:	a6 95       	lsr	r26
 c6c:	97 95       	ror	r25
 c6e:	87 95       	ror	r24
 c70:	77 95       	ror	r23
 c72:	67 95       	ror	r22
 c74:	ba 95       	dec	r27
 c76:	c9 f7       	brne	.-14     	; 0xc6a <__ultoa_invert+0x86>
 c78:	00 97       	sbiw	r24, 0x00	; 0
 c7a:	61 05       	cpc	r22, r1
 c7c:	71 05       	cpc	r23, r1
 c7e:	08 95       	ret
 c80:	9b 01       	movw	r18, r22
 c82:	ac 01       	movw	r20, r24
 c84:	0a 2e       	mov	r0, r26
 c86:	06 94       	lsr	r0
 c88:	57 95       	ror	r21
 c8a:	47 95       	ror	r20
 c8c:	37 95       	ror	r19
 c8e:	27 95       	ror	r18
 c90:	ba 95       	dec	r27
 c92:	c9 f7       	brne	.-14     	; 0xc86 <__ultoa_invert+0xa2>
 c94:	62 0f       	add	r22, r18
 c96:	73 1f       	adc	r23, r19
 c98:	84 1f       	adc	r24, r20
 c9a:	95 1f       	adc	r25, r21
 c9c:	a0 1d       	adc	r26, r0
 c9e:	08 95       	ret

00000ca0 <_exit>:
 ca0:	f8 94       	cli

00000ca2 <__stop_program>:
 ca2:	ff cf       	rjmp	.-2      	; 0xca2 <__stop_program>
