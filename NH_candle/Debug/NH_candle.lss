
NH_candle.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  000008f4  00000988  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008f4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800120  00800120  000009a8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a8  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011ac  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009cf  00000000  00000000  00001c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000734  00000000  00000000  00002663  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000017c  00000000  00000000  00002d98  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000532  00000000  00000000  00002f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007d5  00000000  00000000  00003446  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003c1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	6b c1       	rjmp	.+726    	; 0x320 <__vector_18>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 ef       	ldi	r30, 0xF4	; 244
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 32       	cpi	r26, 0x20	; 32
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a0 e2       	ldi	r26, 0x20	; 32
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a1 32       	cpi	r26, 0x21	; 33
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c0 d0       	rcall	.+384    	; 0x244 <main>
  c4:	15 c4       	rjmp	.+2090   	; 0x8f0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_set>:

// 텍스트 LCD에 문자열을 출력하는 함수
void LCD_wString(char *str){
	while(*str)
	LCD_wData(*str++);
}
  c8:	80 e8       	ldi	r24, 0x80	; 128
  ca:	86 b9       	out	0x06, r24	; 6
  cc:	86 b1       	in	r24, 0x06	; 6
  ce:	87 60       	ori	r24, 0x07	; 7
  d0:	86 b9       	out	0x06, r24	; 6
  d2:	08 95       	ret

000000d4 <ADC_read>:
  d4:	90 e4       	ldi	r25, 0x40	; 64
  d6:	97 b9       	out	0x07, r25	; 7
  d8:	97 b1       	in	r25, 0x07	; 7
  da:	89 2b       	or	r24, r25
  dc:	87 b9       	out	0x07, r24	; 7
  de:	36 9a       	sbi	0x06, 6	; 6
  e0:	36 99       	sbic	0x06, 6	; 6
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <ADC_read+0xc>
  e4:	84 b1       	in	r24, 0x04	; 4
  e6:	95 b1       	in	r25, 0x05	; 5
  e8:	08 95       	ret

000000ea <Request>:
  ea:	88 9a       	sbi	0x11, 0	; 17
  ec:	90 98       	cbi	0x12, 0	; 18
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	89 ef       	ldi	r24, 0xF9	; 249
  f2:	90 e0       	ldi	r25, 0x00	; 0
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <Request+0xa>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <Request+0x14>
  fe:	00 00       	nop
 100:	90 9a       	sbi	0x12, 0	; 18
 102:	08 95       	ret

00000104 <Response>:
 104:	88 98       	cbi	0x11, 0	; 17
 106:	80 99       	sbic	0x10, 0	; 16
 108:	fe cf       	rjmp	.-4      	; 0x106 <Response+0x2>
 10a:	80 9b       	sbis	0x10, 0	; 16
 10c:	fe cf       	rjmp	.-4      	; 0x10a <Response+0x6>
 10e:	80 99       	sbic	0x10, 0	; 16
 110:	fe cf       	rjmp	.-4      	; 0x10e <Response+0xa>
 112:	08 95       	ret

00000114 <Receive_data>:
 114:	88 e0       	ldi	r24, 0x08	; 8
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	80 9b       	sbis	0x10, 0	; 16
 11a:	fe cf       	rjmp	.-4      	; 0x118 <Receive_data+0x4>
 11c:	20 ea       	ldi	r18, 0xA0	; 160
 11e:	2a 95       	dec	r18
 120:	f1 f7       	brne	.-4      	; 0x11e <Receive_data+0xa>
 122:	80 9b       	sbis	0x10, 0	; 16
 124:	07 c0       	rjmp	.+14     	; 0x134 <Receive_data+0x20>
 126:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <__data_end>
 12a:	22 0f       	add	r18, r18
 12c:	21 60       	ori	r18, 0x01	; 1
 12e:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <__data_end>
 132:	05 c0       	rjmp	.+10     	; 0x13e <Receive_data+0x2a>
 134:	20 91 20 01 	lds	r18, 0x0120	; 0x800120 <__data_end>
 138:	22 0f       	add	r18, r18
 13a:	20 93 20 01 	sts	0x0120, r18	; 0x800120 <__data_end>
 13e:	80 99       	sbic	0x10, 0	; 16
 140:	fe cf       	rjmp	.-4      	; 0x13e <Receive_data+0x2a>
 142:	01 97       	sbiw	r24, 0x01	; 1
 144:	49 f7       	brne	.-46     	; 0x118 <Receive_data+0x4>
 146:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 14a:	08 95       	ret

0000014c <LCD_rCommand>:
 14c:	1a ba       	out	0x1a, r1	; 26
 14e:	a8 98       	cbi	0x15, 0	; 21
 150:	a9 9a       	sbi	0x15, 1	; 21
 152:	aa 9a       	sbi	0x15, 2	; 21
 154:	85 e0       	ldi	r24, 0x05	; 5
 156:	8a 95       	dec	r24
 158:	f1 f7       	brne	.-4      	; 0x156 <LCD_rCommand+0xa>
 15a:	00 00       	nop
 15c:	89 b3       	in	r24, 0x19	; 25
 15e:	95 e0       	ldi	r25, 0x05	; 5
 160:	9a 95       	dec	r25
 162:	f1 f7       	brne	.-4      	; 0x160 <LCD_rCommand+0x14>
 164:	00 00       	nop
 166:	aa 98       	cbi	0x15, 2	; 21
 168:	9f ef       	ldi	r25, 0xFF	; 255
 16a:	9a bb       	out	0x1a, r25	; 26
 16c:	95 e0       	ldi	r25, 0x05	; 5
 16e:	9a 95       	dec	r25
 170:	f1 f7       	brne	.-4      	; 0x16e <LCD_rCommand+0x22>
 172:	00 00       	nop
 174:	08 95       	ret

00000176 <LCD_wCommand>:
 176:	a8 98       	cbi	0x15, 0	; 21
 178:	a9 98       	cbi	0x15, 1	; 21
 17a:	aa 9a       	sbi	0x15, 2	; 21
 17c:	8b bb       	out	0x1b, r24	; 27
 17e:	85 e0       	ldi	r24, 0x05	; 5
 180:	8a 95       	dec	r24
 182:	f1 f7       	brne	.-4      	; 0x180 <LCD_wCommand+0xa>
 184:	00 00       	nop
 186:	aa 98       	cbi	0x15, 2	; 21
 188:	85 e0       	ldi	r24, 0x05	; 5
 18a:	8a 95       	dec	r24
 18c:	f1 f7       	brne	.-4      	; 0x18a <LCD_wCommand+0x14>
 18e:	00 00       	nop
 190:	08 95       	ret

00000192 <LCD_wBCommand>:
 192:	cf 93       	push	r28
 194:	c8 2f       	mov	r28, r24
 196:	04 c0       	rjmp	.+8      	; 0x1a0 <LCD_wBCommand+0xe>
 198:	85 e0       	ldi	r24, 0x05	; 5
 19a:	8a 95       	dec	r24
 19c:	f1 f7       	brne	.-4      	; 0x19a <LCD_wBCommand+0x8>
 19e:	00 00       	nop
 1a0:	d5 df       	rcall	.-86     	; 0x14c <LCD_rCommand>
 1a2:	88 23       	and	r24, r24
 1a4:	cc f3       	brlt	.-14     	; 0x198 <LCD_wBCommand+0x6>
 1a6:	a8 98       	cbi	0x15, 0	; 21
 1a8:	a9 98       	cbi	0x15, 1	; 21
 1aa:	aa 9a       	sbi	0x15, 2	; 21
 1ac:	cb bb       	out	0x1b, r28	; 27
 1ae:	85 e0       	ldi	r24, 0x05	; 5
 1b0:	8a 95       	dec	r24
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <LCD_wBCommand+0x1e>
 1b4:	00 00       	nop
 1b6:	aa 98       	cbi	0x15, 2	; 21
 1b8:	85 e0       	ldi	r24, 0x05	; 5
 1ba:	8a 95       	dec	r24
 1bc:	f1 f7       	brne	.-4      	; 0x1ba <LCD_wBCommand+0x28>
 1be:	00 00       	nop
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <LCD_Init>:
 1c4:	2f ef       	ldi	r18, 0xFF	; 255
 1c6:	81 ee       	ldi	r24, 0xE1	; 225
 1c8:	94 e0       	ldi	r25, 0x04	; 4
 1ca:	21 50       	subi	r18, 0x01	; 1
 1cc:	80 40       	sbci	r24, 0x00	; 0
 1ce:	90 40       	sbci	r25, 0x00	; 0
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <LCD_Init+0x6>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <LCD_Init+0x10>
 1d4:	00 00       	nop
 1d6:	88 e3       	ldi	r24, 0x38	; 56
 1d8:	ce df       	rcall	.-100    	; 0x176 <LCD_wCommand>
 1da:	8f e3       	ldi	r24, 0x3F	; 63
 1dc:	9c e9       	ldi	r25, 0x9C	; 156
 1de:	01 97       	sbiw	r24, 0x01	; 1
 1e0:	f1 f7       	brne	.-4      	; 0x1de <LCD_Init+0x1a>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <LCD_Init+0x20>
 1e4:	00 00       	nop
 1e6:	88 e3       	ldi	r24, 0x38	; 56
 1e8:	c6 df       	rcall	.-116    	; 0x176 <LCD_wCommand>
 1ea:	8f e1       	ldi	r24, 0x1F	; 31
 1ec:	93 e0       	ldi	r25, 0x03	; 3
 1ee:	01 97       	sbiw	r24, 0x01	; 1
 1f0:	f1 f7       	brne	.-4      	; 0x1ee <LCD_Init+0x2a>
 1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <LCD_Init+0x30>
 1f4:	00 00       	nop
 1f6:	88 e3       	ldi	r24, 0x38	; 56
 1f8:	be df       	rcall	.-132    	; 0x176 <LCD_wCommand>
 1fa:	8f e1       	ldi	r24, 0x1F	; 31
 1fc:	93 e0       	ldi	r25, 0x03	; 3
 1fe:	01 97       	sbiw	r24, 0x01	; 1
 200:	f1 f7       	brne	.-4      	; 0x1fe <LCD_Init+0x3a>
 202:	00 c0       	rjmp	.+0      	; 0x204 <LCD_Init+0x40>
 204:	00 00       	nop
 206:	88 e3       	ldi	r24, 0x38	; 56
 208:	c4 df       	rcall	.-120    	; 0x192 <LCD_wBCommand>
 20a:	8c e0       	ldi	r24, 0x0C	; 12
 20c:	c2 df       	rcall	.-124    	; 0x192 <LCD_wBCommand>
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	c0 cf       	rjmp	.-128    	; 0x192 <LCD_wBCommand>
 212:	08 95       	ret

00000214 <uart_init>:
#ifndef UART_H_
#define UART_H_

void uart_init(unsigned int baud) // baudrate 속도 설정
{
	UBRR0H = (unsigned char)(baud >> 8);
 214:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = (unsigned char)baud;
 218:	89 b9       	out	0x09, r24	; 9
	UCSR0B = (1 << TXEN0) | (1 << RXEN0) | (1 << RXCIE0); // 7 bit : 인터럽트 활성화
 21a:	88 e9       	ldi	r24, 0x98	; 152
 21c:	8a b9       	out	0x0a, r24	; 10
 21e:	08 95       	ret

00000220 <uart_write>:
}
void uart_write(unsigned char data) // uart로 데이터 전송
{
	while (!(UCSR0A & (1 << UDRE0)));
 220:	5d 9b       	sbis	0x0b, 5	; 11
 222:	fe cf       	rjmp	.-4      	; 0x220 <uart_write>
	UDR0 = data;
 224:	8c b9       	out	0x0c, r24	; 12
 226:	08 95       	ret

00000228 <uart_string>:
}

void uart_string(char* str)
{
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	ec 01       	movw	r28, r24
	while (*str)
 22e:	88 81       	ld	r24, Y
 230:	88 23       	and	r24, r24
 232:	29 f0       	breq	.+10     	; 0x23e <uart_string+0x16>
 234:	21 96       	adiw	r28, 0x01	; 1
	uart_write(*str++);
 236:	f4 df       	rcall	.-24     	; 0x220 <uart_write>
	UDR0 = data;
}

void uart_string(char* str)
{
	while (*str)
 238:	89 91       	ld	r24, Y+
 23a:	81 11       	cpse	r24, r1
 23c:	fc cf       	rjmp	.-8      	; 0x236 <uart_string+0xe>
	uart_write(*str++);
}
 23e:	df 91       	pop	r29
 240:	cf 91       	pop	r28
 242:	08 95       	ret

00000244 <main>:
#include "DHT11.h"
#include "lcd.h"
#include "uart.h"

int main(void)
{
 244:	cf 93       	push	r28
 246:	df 93       	push	r29
 248:	cd b7       	in	r28, 0x3d	; 61
 24a:	de b7       	in	r29, 0x3e	; 62
 24c:	e2 97       	sbiw	r28, 0x32	; 50
 24e:	0f b6       	in	r0, 0x3f	; 63
 250:	f8 94       	cli
 252:	de bf       	out	0x3e, r29	; 62
 254:	0f be       	out	0x3f, r0	; 63
 256:	cd bf       	out	0x3d, r28	; 61
    DDRA = 0xFF; // LCD data 핀
 258:	8f ef       	ldi	r24, 0xFF	; 255
 25a:	8a bb       	out	0x1a, r24	; 26
	DDRC = 0xFF; // LCD control 핀
 25c:	84 bb       	out	0x14, r24	; 20
	
	DDRB = 0xFF; // RGB LED
 25e:	87 bb       	out	0x17, r24	; 23
	DDRD = 0x00; // DHT
 260:	11 ba       	out	0x11, r1	; 17
	DDRF = 0x00; // cds, sound
 262:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	LCD_Init();
 266:	ae df       	rcall	.-164    	; 0x1c4 <LCD_Init>
	ADC_set();
 268:	2f df       	rcall	.-418    	; 0xc8 <ADC_set>
 26a:	87 e6       	ldi	r24, 0x67	; 103
	uart_init(BAUDRATE(9600));
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	d2 df       	rcall	.-92     	; 0x214 <uart_init>
 270:	78 94       	sei
	sei();
 272:	01 e0       	ldi	r16, 0x01	; 1
	
	int mode = 1;
 274:	10 e0       	ldi	r17, 0x00	; 0
 276:	0f 2e       	mov	r0, r31
		CheckSum=Receive_data(); //모든 세그먼트의 체크섬
		
		if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum) sprintf(buff, "error");
		else
		{
			sprintf("T%2d.%d H%2d.%d C%4d M%1d", I_Temp, D_Temp, I_RH, D_RH, cds_value, mode);
 278:	f6 e0       	ldi	r31, 0x06	; 6
 27a:	ef 2e       	mov	r14, r31
 27c:	f1 e0       	ldi	r31, 0x01	; 1
 27e:	ff 2e       	mov	r15, r31
 280:	f0 2d       	mov	r31, r0
	char sound_value; 
	uint8_t I_RH, D_RH, I_Temp, D_Temp, CheckSum;
	
    while (1) 
    {
		cds_value = ADC_read(0);
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	27 df       	rcall	.-434    	; 0xd4 <ADC_read>
 286:	98 2e       	mov	r9, r24
 288:	89 2e       	mov	r8, r25
 28a:	01 99       	sbic	0x00, 1	; 0
		sound_value = (PINF & 0x02);
		
		if(sound_value == 0x00) mode++;
 28c:	02 c0       	rjmp	.+4      	; 0x292 <main+0x4e>
 28e:	0f 5f       	subi	r16, 0xFF	; 255
 290:	1f 4f       	sbci	r17, 0xFF	; 255
 292:	04 30       	cpi	r16, 0x04	; 4
		if(mode > 3) mode = 1;
 294:	11 05       	cpc	r17, r1
 296:	14 f0       	brlt	.+4      	; 0x29c <main+0x58>
 298:	01 e0       	ldi	r16, 0x01	; 1
		
		Request();		 //시작 펄스 신호 보냄
 29a:	10 e0       	ldi	r17, 0x00	; 0
		Response();		 //센서로부터 응답 받음
 29c:	26 df       	rcall	.-436    	; 0xea <Request>
		I_RH=Receive_data();	 //습도의 정수 부분
 29e:	32 df       	rcall	.-412    	; 0x104 <Response>
 2a0:	39 df       	rcall	.-398    	; 0x114 <Receive_data>
		D_RH=Receive_data();	 //습도의 실수 부분
 2a2:	b8 2e       	mov	r11, r24
 2a4:	37 df       	rcall	.-402    	; 0x114 <Receive_data>
 2a6:	a8 2e       	mov	r10, r24
		I_Temp=Receive_data();	 //온도의 정수 부분
 2a8:	35 df       	rcall	.-406    	; 0x114 <Receive_data>
 2aa:	d8 2e       	mov	r13, r24
 2ac:	33 df       	rcall	.-410    	; 0x114 <Receive_data>
		D_Temp=Receive_data();	 //온도의 실수 부분
 2ae:	c8 2e       	mov	r12, r24
 2b0:	31 df       	rcall	.-414    	; 0x114 <Receive_data>
 2b2:	2a 2d       	mov	r18, r10
		CheckSum=Receive_data(); //모든 세그먼트의 체크섬
 2b4:	30 e0       	ldi	r19, 0x00	; 0
 2b6:	2b 0d       	add	r18, r11
		
		if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum) sprintf(buff, "error");
 2b8:	31 1d       	adc	r19, r1
 2ba:	2d 0d       	add	r18, r13
 2bc:	31 1d       	adc	r19, r1
 2be:	2c 0d       	add	r18, r12
 2c0:	31 1d       	adc	r19, r1
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	28 17       	cp	r18, r24
 2c6:	39 07       	cpc	r19, r25
 2c8:	51 f0       	breq	.+20     	; 0x2de <main+0x9a>
 2ca:	86 e0       	ldi	r24, 0x06	; 6
 2cc:	e0 e0       	ldi	r30, 0x00	; 0
 2ce:	f1 e0       	ldi	r31, 0x01	; 1
 2d0:	de 01       	movw	r26, r28
 2d2:	11 96       	adiw	r26, 0x01	; 1
 2d4:	01 90       	ld	r0, Z+
 2d6:	0d 92       	st	X+, r0
 2d8:	8a 95       	dec	r24
 2da:	e1 f7       	brne	.-8      	; 0x2d4 <main+0x90>
 2dc:	17 c0       	rjmp	.+46     	; 0x30c <main+0xc8>
 2de:	1f 93       	push	r17
 2e0:	0f 93       	push	r16
 2e2:	8f 92       	push	r8
		else
		{
			sprintf("T%2d.%d H%2d.%d C%4d M%1d", I_Temp, D_Temp, I_RH, D_RH, cds_value, mode);
 2e4:	9f 92       	push	r9
 2e6:	1f 92       	push	r1
 2e8:	af 92       	push	r10
 2ea:	1f 92       	push	r1
 2ec:	bf 92       	push	r11
 2ee:	1f 92       	push	r1
 2f0:	cf 92       	push	r12
 2f2:	1f 92       	push	r1
 2f4:	df 92       	push	r13
 2f6:	ff 92       	push	r15
 2f8:	ef 92       	push	r14
 2fa:	1f d0       	rcall	.+62     	; 0x33a <sprintf>
 2fc:	ce 01       	movw	r24, r28
 2fe:	01 96       	adiw	r24, 0x01	; 1
			uart_string(buff);
 300:	93 df       	rcall	.-218    	; 0x228 <uart_string>
 302:	0f b6       	in	r0, 0x3f	; 63
 304:	f8 94       	cli
 306:	de bf       	out	0x3e, r29	; 62
 308:	0f be       	out	0x3f, r0	; 63
 30a:	cd bf       	out	0x3d, r28	; 61
 30c:	9f ef       	ldi	r25, 0xFF	; 255
 30e:	2b e7       	ldi	r18, 0x7B	; 123
 310:	82 e9       	ldi	r24, 0x92	; 146
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 312:	91 50       	subi	r25, 0x01	; 1
 314:	20 40       	sbci	r18, 0x00	; 0
 316:	80 40       	sbci	r24, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0xce>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0xd8>
 31c:	00 00       	nop
 31e:	b1 cf       	rjmp	.-158    	; 0x282 <main+0x3e>

00000320 <__vector_18>:
 320:	1f 92       	push	r1
 322:	0f 92       	push	r0
 324:	0f b6       	in	r0, 0x3f	; 63
		}
		_delay_ms(3000); // 2초 이상 쉬어야 센서에서 맞는 값을 읽어올 수 있다
    }
}
ISR(USART0_RX_vect)
{
 326:	0f 92       	push	r0
 328:	11 24       	eor	r1, r1
 32a:	8f 93       	push	r24
	unsigned char buff = UDR0; // UDR0에 레지스터에 데이터가 저장
 32c:	8c b1       	in	r24, 0x0c	; 12
	
	if(buff == 0x02);
	else if(buff == 0x03);
}
 32e:	8f 91       	pop	r24
 330:	0f 90       	pop	r0
 332:	0f be       	out	0x3f, r0	; 63
 334:	0f 90       	pop	r0
 336:	1f 90       	pop	r1
 338:	18 95       	reti

0000033a <sprintf>:
 33a:	0f 93       	push	r16
 33c:	1f 93       	push	r17
 33e:	cf 93       	push	r28
 340:	df 93       	push	r29
 342:	cd b7       	in	r28, 0x3d	; 61
 344:	de b7       	in	r29, 0x3e	; 62
 346:	2e 97       	sbiw	r28, 0x0e	; 14
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	f8 94       	cli
 34c:	de bf       	out	0x3e, r29	; 62
 34e:	0f be       	out	0x3f, r0	; 63
 350:	cd bf       	out	0x3d, r28	; 61
 352:	0d 89       	ldd	r16, Y+21	; 0x15
 354:	1e 89       	ldd	r17, Y+22	; 0x16
 356:	86 e0       	ldi	r24, 0x06	; 6
 358:	8c 83       	std	Y+4, r24	; 0x04
 35a:	1a 83       	std	Y+2, r17	; 0x02
 35c:	09 83       	std	Y+1, r16	; 0x01
 35e:	8f ef       	ldi	r24, 0xFF	; 255
 360:	9f e7       	ldi	r25, 0x7F	; 127
 362:	9e 83       	std	Y+6, r25	; 0x06
 364:	8d 83       	std	Y+5, r24	; 0x05
 366:	ae 01       	movw	r20, r28
 368:	47 5e       	subi	r20, 0xE7	; 231
 36a:	5f 4f       	sbci	r21, 0xFF	; 255
 36c:	6f 89       	ldd	r22, Y+23	; 0x17
 36e:	78 8d       	ldd	r23, Y+24	; 0x18
 370:	ce 01       	movw	r24, r28
 372:	01 96       	adiw	r24, 0x01	; 1
 374:	10 d0       	rcall	.+32     	; 0x396 <vfprintf>
 376:	ef 81       	ldd	r30, Y+7	; 0x07
 378:	f8 85       	ldd	r31, Y+8	; 0x08
 37a:	e0 0f       	add	r30, r16
 37c:	f1 1f       	adc	r31, r17
 37e:	10 82       	st	Z, r1
 380:	2e 96       	adiw	r28, 0x0e	; 14
 382:	0f b6       	in	r0, 0x3f	; 63
 384:	f8 94       	cli
 386:	de bf       	out	0x3e, r29	; 62
 388:	0f be       	out	0x3f, r0	; 63
 38a:	cd bf       	out	0x3d, r28	; 61
 38c:	df 91       	pop	r29
 38e:	cf 91       	pop	r28
 390:	1f 91       	pop	r17
 392:	0f 91       	pop	r16
 394:	08 95       	ret

00000396 <vfprintf>:
 396:	2f 92       	push	r2
 398:	3f 92       	push	r3
 39a:	4f 92       	push	r4
 39c:	5f 92       	push	r5
 39e:	6f 92       	push	r6
 3a0:	7f 92       	push	r7
 3a2:	8f 92       	push	r8
 3a4:	9f 92       	push	r9
 3a6:	af 92       	push	r10
 3a8:	bf 92       	push	r11
 3aa:	cf 92       	push	r12
 3ac:	df 92       	push	r13
 3ae:	ef 92       	push	r14
 3b0:	ff 92       	push	r15
 3b2:	0f 93       	push	r16
 3b4:	1f 93       	push	r17
 3b6:	cf 93       	push	r28
 3b8:	df 93       	push	r29
 3ba:	cd b7       	in	r28, 0x3d	; 61
 3bc:	de b7       	in	r29, 0x3e	; 62
 3be:	2b 97       	sbiw	r28, 0x0b	; 11
 3c0:	0f b6       	in	r0, 0x3f	; 63
 3c2:	f8 94       	cli
 3c4:	de bf       	out	0x3e, r29	; 62
 3c6:	0f be       	out	0x3f, r0	; 63
 3c8:	cd bf       	out	0x3d, r28	; 61
 3ca:	6c 01       	movw	r12, r24
 3cc:	7b 01       	movw	r14, r22
 3ce:	8a 01       	movw	r16, r20
 3d0:	fc 01       	movw	r30, r24
 3d2:	17 82       	std	Z+7, r1	; 0x07
 3d4:	16 82       	std	Z+6, r1	; 0x06
 3d6:	83 81       	ldd	r24, Z+3	; 0x03
 3d8:	81 ff       	sbrs	r24, 1
 3da:	bf c1       	rjmp	.+894    	; 0x75a <__LOCK_REGION_LENGTH__+0x35a>
 3dc:	ce 01       	movw	r24, r28
 3de:	01 96       	adiw	r24, 0x01	; 1
 3e0:	3c 01       	movw	r6, r24
 3e2:	f6 01       	movw	r30, r12
 3e4:	93 81       	ldd	r25, Z+3	; 0x03
 3e6:	f7 01       	movw	r30, r14
 3e8:	93 fd       	sbrc	r25, 3
 3ea:	85 91       	lpm	r24, Z+
 3ec:	93 ff       	sbrs	r25, 3
 3ee:	81 91       	ld	r24, Z+
 3f0:	7f 01       	movw	r14, r30
 3f2:	88 23       	and	r24, r24
 3f4:	09 f4       	brne	.+2      	; 0x3f8 <vfprintf+0x62>
 3f6:	ad c1       	rjmp	.+858    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 3f8:	85 32       	cpi	r24, 0x25	; 37
 3fa:	39 f4       	brne	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fc:	93 fd       	sbrc	r25, 3
 3fe:	85 91       	lpm	r24, Z+
 400:	93 ff       	sbrs	r25, 3
 402:	81 91       	ld	r24, Z+
 404:	7f 01       	movw	r14, r30
 406:	85 32       	cpi	r24, 0x25	; 37
 408:	21 f4       	brne	.+8      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40a:	b6 01       	movw	r22, r12
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	d6 d1       	rcall	.+940    	; 0x7bc <fputc>
 410:	e8 cf       	rjmp	.-48     	; 0x3e2 <vfprintf+0x4c>
 412:	91 2c       	mov	r9, r1
 414:	21 2c       	mov	r2, r1
 416:	31 2c       	mov	r3, r1
 418:	ff e1       	ldi	r31, 0x1F	; 31
 41a:	f3 15       	cp	r31, r3
 41c:	d8 f0       	brcs	.+54     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 41e:	8b 32       	cpi	r24, 0x2B	; 43
 420:	79 f0       	breq	.+30     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 422:	38 f4       	brcc	.+14     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 424:	80 32       	cpi	r24, 0x20	; 32
 426:	79 f0       	breq	.+30     	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 428:	83 32       	cpi	r24, 0x23	; 35
 42a:	a1 f4       	brne	.+40     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 42c:	23 2d       	mov	r18, r3
 42e:	20 61       	ori	r18, 0x10	; 16
 430:	1d c0       	rjmp	.+58     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 432:	8d 32       	cpi	r24, 0x2D	; 45
 434:	61 f0       	breq	.+24     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 436:	80 33       	cpi	r24, 0x30	; 48
 438:	69 f4       	brne	.+26     	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
 43a:	23 2d       	mov	r18, r3
 43c:	21 60       	ori	r18, 0x01	; 1
 43e:	16 c0       	rjmp	.+44     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 440:	83 2d       	mov	r24, r3
 442:	82 60       	ori	r24, 0x02	; 2
 444:	38 2e       	mov	r3, r24
 446:	e3 2d       	mov	r30, r3
 448:	e4 60       	ori	r30, 0x04	; 4
 44a:	3e 2e       	mov	r3, r30
 44c:	2a c0       	rjmp	.+84     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 44e:	f3 2d       	mov	r31, r3
 450:	f8 60       	ori	r31, 0x08	; 8
 452:	1d c0       	rjmp	.+58     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 454:	37 fc       	sbrc	r3, 7
 456:	2d c0       	rjmp	.+90     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 458:	20 ed       	ldi	r18, 0xD0	; 208
 45a:	28 0f       	add	r18, r24
 45c:	2a 30       	cpi	r18, 0x0A	; 10
 45e:	40 f0       	brcs	.+16     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 460:	8e 32       	cpi	r24, 0x2E	; 46
 462:	b9 f4       	brne	.+46     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 464:	36 fc       	sbrc	r3, 6
 466:	75 c1       	rjmp	.+746    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 468:	23 2d       	mov	r18, r3
 46a:	20 64       	ori	r18, 0x40	; 64
 46c:	32 2e       	mov	r3, r18
 46e:	19 c0       	rjmp	.+50     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 470:	36 fe       	sbrs	r3, 6
 472:	06 c0       	rjmp	.+12     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 474:	8a e0       	ldi	r24, 0x0A	; 10
 476:	98 9e       	mul	r9, r24
 478:	20 0d       	add	r18, r0
 47a:	11 24       	eor	r1, r1
 47c:	92 2e       	mov	r9, r18
 47e:	11 c0       	rjmp	.+34     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 480:	ea e0       	ldi	r30, 0x0A	; 10
 482:	2e 9e       	mul	r2, r30
 484:	20 0d       	add	r18, r0
 486:	11 24       	eor	r1, r1
 488:	22 2e       	mov	r2, r18
 48a:	f3 2d       	mov	r31, r3
 48c:	f0 62       	ori	r31, 0x20	; 32
 48e:	3f 2e       	mov	r3, r31
 490:	08 c0       	rjmp	.+16     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 492:	8c 36       	cpi	r24, 0x6C	; 108
 494:	21 f4       	brne	.+8      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 496:	83 2d       	mov	r24, r3
 498:	80 68       	ori	r24, 0x80	; 128
 49a:	38 2e       	mov	r3, r24
 49c:	02 c0       	rjmp	.+4      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 49e:	88 36       	cpi	r24, 0x68	; 104
 4a0:	41 f4       	brne	.+16     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a2:	f7 01       	movw	r30, r14
 4a4:	93 fd       	sbrc	r25, 3
 4a6:	85 91       	lpm	r24, Z+
 4a8:	93 ff       	sbrs	r25, 3
 4aa:	81 91       	ld	r24, Z+
 4ac:	7f 01       	movw	r14, r30
 4ae:	81 11       	cpse	r24, r1
 4b0:	b3 cf       	rjmp	.-154    	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 4b2:	98 2f       	mov	r25, r24
 4b4:	9f 7d       	andi	r25, 0xDF	; 223
 4b6:	95 54       	subi	r25, 0x45	; 69
 4b8:	93 30       	cpi	r25, 0x03	; 3
 4ba:	28 f4       	brcc	.+10     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4bc:	0c 5f       	subi	r16, 0xFC	; 252
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	9f e3       	ldi	r25, 0x3F	; 63
 4c2:	99 83       	std	Y+1, r25	; 0x01
 4c4:	0d c0       	rjmp	.+26     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4c6:	83 36       	cpi	r24, 0x63	; 99
 4c8:	31 f0       	breq	.+12     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ca:	83 37       	cpi	r24, 0x73	; 115
 4cc:	71 f0       	breq	.+28     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 4ce:	83 35       	cpi	r24, 0x53	; 83
 4d0:	09 f0       	breq	.+2      	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4d2:	55 c0       	rjmp	.+170    	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 4d4:	20 c0       	rjmp	.+64     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4d6:	f8 01       	movw	r30, r16
 4d8:	80 81       	ld	r24, Z
 4da:	89 83       	std	Y+1, r24	; 0x01
 4dc:	0e 5f       	subi	r16, 0xFE	; 254
 4de:	1f 4f       	sbci	r17, 0xFF	; 255
 4e0:	88 24       	eor	r8, r8
 4e2:	83 94       	inc	r8
 4e4:	91 2c       	mov	r9, r1
 4e6:	53 01       	movw	r10, r6
 4e8:	12 c0       	rjmp	.+36     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4ea:	28 01       	movw	r4, r16
 4ec:	f2 e0       	ldi	r31, 0x02	; 2
 4ee:	4f 0e       	add	r4, r31
 4f0:	51 1c       	adc	r5, r1
 4f2:	f8 01       	movw	r30, r16
 4f4:	a0 80       	ld	r10, Z
 4f6:	b1 80       	ldd	r11, Z+1	; 0x01
 4f8:	36 fe       	sbrs	r3, 6
 4fa:	03 c0       	rjmp	.+6      	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4fc:	69 2d       	mov	r22, r9
 4fe:	70 e0       	ldi	r23, 0x00	; 0
 500:	02 c0       	rjmp	.+4      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 502:	6f ef       	ldi	r22, 0xFF	; 255
 504:	7f ef       	ldi	r23, 0xFF	; 255
 506:	c5 01       	movw	r24, r10
 508:	4e d1       	rcall	.+668    	; 0x7a6 <strnlen>
 50a:	4c 01       	movw	r8, r24
 50c:	82 01       	movw	r16, r4
 50e:	f3 2d       	mov	r31, r3
 510:	ff 77       	andi	r31, 0x7F	; 127
 512:	3f 2e       	mov	r3, r31
 514:	15 c0       	rjmp	.+42     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 516:	28 01       	movw	r4, r16
 518:	22 e0       	ldi	r18, 0x02	; 2
 51a:	42 0e       	add	r4, r18
 51c:	51 1c       	adc	r5, r1
 51e:	f8 01       	movw	r30, r16
 520:	a0 80       	ld	r10, Z
 522:	b1 80       	ldd	r11, Z+1	; 0x01
 524:	36 fe       	sbrs	r3, 6
 526:	03 c0       	rjmp	.+6      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 528:	69 2d       	mov	r22, r9
 52a:	70 e0       	ldi	r23, 0x00	; 0
 52c:	02 c0       	rjmp	.+4      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 52e:	6f ef       	ldi	r22, 0xFF	; 255
 530:	7f ef       	ldi	r23, 0xFF	; 255
 532:	c5 01       	movw	r24, r10
 534:	2d d1       	rcall	.+602    	; 0x790 <strnlen_P>
 536:	4c 01       	movw	r8, r24
 538:	f3 2d       	mov	r31, r3
 53a:	f0 68       	ori	r31, 0x80	; 128
 53c:	3f 2e       	mov	r3, r31
 53e:	82 01       	movw	r16, r4
 540:	33 fc       	sbrc	r3, 3
 542:	19 c0       	rjmp	.+50     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 544:	82 2d       	mov	r24, r2
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	88 16       	cp	r8, r24
 54a:	99 06       	cpc	r9, r25
 54c:	a0 f4       	brcc	.+40     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 54e:	b6 01       	movw	r22, r12
 550:	80 e2       	ldi	r24, 0x20	; 32
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	33 d1       	rcall	.+614    	; 0x7bc <fputc>
 556:	2a 94       	dec	r2
 558:	f5 cf       	rjmp	.-22     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 55a:	f5 01       	movw	r30, r10
 55c:	37 fc       	sbrc	r3, 7
 55e:	85 91       	lpm	r24, Z+
 560:	37 fe       	sbrs	r3, 7
 562:	81 91       	ld	r24, Z+
 564:	5f 01       	movw	r10, r30
 566:	b6 01       	movw	r22, r12
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	28 d1       	rcall	.+592    	; 0x7bc <fputc>
 56c:	21 10       	cpse	r2, r1
 56e:	2a 94       	dec	r2
 570:	21 e0       	ldi	r18, 0x01	; 1
 572:	82 1a       	sub	r8, r18
 574:	91 08       	sbc	r9, r1
 576:	81 14       	cp	r8, r1
 578:	91 04       	cpc	r9, r1
 57a:	79 f7       	brne	.-34     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 57c:	e1 c0       	rjmp	.+450    	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 57e:	84 36       	cpi	r24, 0x64	; 100
 580:	11 f0       	breq	.+4      	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 582:	89 36       	cpi	r24, 0x69	; 105
 584:	39 f5       	brne	.+78     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 586:	f8 01       	movw	r30, r16
 588:	37 fe       	sbrs	r3, 7
 58a:	07 c0       	rjmp	.+14     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 58c:	60 81       	ld	r22, Z
 58e:	71 81       	ldd	r23, Z+1	; 0x01
 590:	82 81       	ldd	r24, Z+2	; 0x02
 592:	93 81       	ldd	r25, Z+3	; 0x03
 594:	0c 5f       	subi	r16, 0xFC	; 252
 596:	1f 4f       	sbci	r17, 0xFF	; 255
 598:	08 c0       	rjmp	.+16     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 59a:	60 81       	ld	r22, Z
 59c:	71 81       	ldd	r23, Z+1	; 0x01
 59e:	07 2e       	mov	r0, r23
 5a0:	00 0c       	add	r0, r0
 5a2:	88 0b       	sbc	r24, r24
 5a4:	99 0b       	sbc	r25, r25
 5a6:	0e 5f       	subi	r16, 0xFE	; 254
 5a8:	1f 4f       	sbci	r17, 0xFF	; 255
 5aa:	f3 2d       	mov	r31, r3
 5ac:	ff 76       	andi	r31, 0x6F	; 111
 5ae:	3f 2e       	mov	r3, r31
 5b0:	97 ff       	sbrs	r25, 7
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5b4:	90 95       	com	r25
 5b6:	80 95       	com	r24
 5b8:	70 95       	com	r23
 5ba:	61 95       	neg	r22
 5bc:	7f 4f       	sbci	r23, 0xFF	; 255
 5be:	8f 4f       	sbci	r24, 0xFF	; 255
 5c0:	9f 4f       	sbci	r25, 0xFF	; 255
 5c2:	f0 68       	ori	r31, 0x80	; 128
 5c4:	3f 2e       	mov	r3, r31
 5c6:	2a e0       	ldi	r18, 0x0A	; 10
 5c8:	30 e0       	ldi	r19, 0x00	; 0
 5ca:	a3 01       	movw	r20, r6
 5cc:	33 d1       	rcall	.+614    	; 0x834 <__ultoa_invert>
 5ce:	88 2e       	mov	r8, r24
 5d0:	86 18       	sub	r8, r6
 5d2:	44 c0       	rjmp	.+136    	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 5d4:	85 37       	cpi	r24, 0x75	; 117
 5d6:	31 f4       	brne	.+12     	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5d8:	23 2d       	mov	r18, r3
 5da:	2f 7e       	andi	r18, 0xEF	; 239
 5dc:	b2 2e       	mov	r11, r18
 5de:	2a e0       	ldi	r18, 0x0A	; 10
 5e0:	30 e0       	ldi	r19, 0x00	; 0
 5e2:	25 c0       	rjmp	.+74     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 5e4:	93 2d       	mov	r25, r3
 5e6:	99 7f       	andi	r25, 0xF9	; 249
 5e8:	b9 2e       	mov	r11, r25
 5ea:	8f 36       	cpi	r24, 0x6F	; 111
 5ec:	c1 f0       	breq	.+48     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 5ee:	18 f4       	brcc	.+6      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f0:	88 35       	cpi	r24, 0x58	; 88
 5f2:	79 f0       	breq	.+30     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 5f4:	ae c0       	rjmp	.+348    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 5f6:	80 37       	cpi	r24, 0x70	; 112
 5f8:	19 f0       	breq	.+6      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5fa:	88 37       	cpi	r24, 0x78	; 120
 5fc:	21 f0       	breq	.+8      	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5fe:	a9 c0       	rjmp	.+338    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
 600:	e9 2f       	mov	r30, r25
 602:	e0 61       	ori	r30, 0x10	; 16
 604:	be 2e       	mov	r11, r30
 606:	b4 fe       	sbrs	r11, 4
 608:	0d c0       	rjmp	.+26     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 60a:	fb 2d       	mov	r31, r11
 60c:	f4 60       	ori	r31, 0x04	; 4
 60e:	bf 2e       	mov	r11, r31
 610:	09 c0       	rjmp	.+18     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 612:	34 fe       	sbrs	r3, 4
 614:	0a c0       	rjmp	.+20     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 616:	29 2f       	mov	r18, r25
 618:	26 60       	ori	r18, 0x06	; 6
 61a:	b2 2e       	mov	r11, r18
 61c:	06 c0       	rjmp	.+12     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 61e:	28 e0       	ldi	r18, 0x08	; 8
 620:	30 e0       	ldi	r19, 0x00	; 0
 622:	05 c0       	rjmp	.+10     	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 624:	20 e1       	ldi	r18, 0x10	; 16
 626:	30 e0       	ldi	r19, 0x00	; 0
 628:	02 c0       	rjmp	.+4      	; 0x62e <__LOCK_REGION_LENGTH__+0x22e>
 62a:	20 e1       	ldi	r18, 0x10	; 16
 62c:	32 e0       	ldi	r19, 0x02	; 2
 62e:	f8 01       	movw	r30, r16
 630:	b7 fe       	sbrs	r11, 7
 632:	07 c0       	rjmp	.+14     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 634:	60 81       	ld	r22, Z
 636:	71 81       	ldd	r23, Z+1	; 0x01
 638:	82 81       	ldd	r24, Z+2	; 0x02
 63a:	93 81       	ldd	r25, Z+3	; 0x03
 63c:	0c 5f       	subi	r16, 0xFC	; 252
 63e:	1f 4f       	sbci	r17, 0xFF	; 255
 640:	06 c0       	rjmp	.+12     	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 642:	60 81       	ld	r22, Z
 644:	71 81       	ldd	r23, Z+1	; 0x01
 646:	80 e0       	ldi	r24, 0x00	; 0
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 5f       	subi	r16, 0xFE	; 254
 64c:	1f 4f       	sbci	r17, 0xFF	; 255
 64e:	a3 01       	movw	r20, r6
 650:	f1 d0       	rcall	.+482    	; 0x834 <__ultoa_invert>
 652:	88 2e       	mov	r8, r24
 654:	86 18       	sub	r8, r6
 656:	fb 2d       	mov	r31, r11
 658:	ff 77       	andi	r31, 0x7F	; 127
 65a:	3f 2e       	mov	r3, r31
 65c:	36 fe       	sbrs	r3, 6
 65e:	0d c0       	rjmp	.+26     	; 0x67a <__LOCK_REGION_LENGTH__+0x27a>
 660:	23 2d       	mov	r18, r3
 662:	2e 7f       	andi	r18, 0xFE	; 254
 664:	a2 2e       	mov	r10, r18
 666:	89 14       	cp	r8, r9
 668:	58 f4       	brcc	.+22     	; 0x680 <__LOCK_REGION_LENGTH__+0x280>
 66a:	34 fe       	sbrs	r3, 4
 66c:	0b c0       	rjmp	.+22     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 66e:	32 fc       	sbrc	r3, 2
 670:	09 c0       	rjmp	.+18     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 672:	83 2d       	mov	r24, r3
 674:	8e 7e       	andi	r24, 0xEE	; 238
 676:	a8 2e       	mov	r10, r24
 678:	05 c0       	rjmp	.+10     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 67a:	b8 2c       	mov	r11, r8
 67c:	a3 2c       	mov	r10, r3
 67e:	03 c0       	rjmp	.+6      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 680:	b8 2c       	mov	r11, r8
 682:	01 c0       	rjmp	.+2      	; 0x686 <__LOCK_REGION_LENGTH__+0x286>
 684:	b9 2c       	mov	r11, r9
 686:	a4 fe       	sbrs	r10, 4
 688:	0f c0       	rjmp	.+30     	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 68a:	fe 01       	movw	r30, r28
 68c:	e8 0d       	add	r30, r8
 68e:	f1 1d       	adc	r31, r1
 690:	80 81       	ld	r24, Z
 692:	80 33       	cpi	r24, 0x30	; 48
 694:	21 f4       	brne	.+8      	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 696:	9a 2d       	mov	r25, r10
 698:	99 7e       	andi	r25, 0xE9	; 233
 69a:	a9 2e       	mov	r10, r25
 69c:	09 c0       	rjmp	.+18     	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 69e:	a2 fe       	sbrs	r10, 2
 6a0:	06 c0       	rjmp	.+12     	; 0x6ae <__LOCK_REGION_LENGTH__+0x2ae>
 6a2:	b3 94       	inc	r11
 6a4:	b3 94       	inc	r11
 6a6:	04 c0       	rjmp	.+8      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6a8:	8a 2d       	mov	r24, r10
 6aa:	86 78       	andi	r24, 0x86	; 134
 6ac:	09 f0       	breq	.+2      	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 6ae:	b3 94       	inc	r11
 6b0:	a3 fc       	sbrc	r10, 3
 6b2:	10 c0       	rjmp	.+32     	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6b4:	a0 fe       	sbrs	r10, 0
 6b6:	06 c0       	rjmp	.+12     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6b8:	b2 14       	cp	r11, r2
 6ba:	80 f4       	brcc	.+32     	; 0x6dc <__LOCK_REGION_LENGTH__+0x2dc>
 6bc:	28 0c       	add	r2, r8
 6be:	92 2c       	mov	r9, r2
 6c0:	9b 18       	sub	r9, r11
 6c2:	0d c0       	rjmp	.+26     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6c4:	b2 14       	cp	r11, r2
 6c6:	58 f4       	brcc	.+22     	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6c8:	b6 01       	movw	r22, r12
 6ca:	80 e2       	ldi	r24, 0x20	; 32
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	76 d0       	rcall	.+236    	; 0x7bc <fputc>
 6d0:	b3 94       	inc	r11
 6d2:	f8 cf       	rjmp	.-16     	; 0x6c4 <__LOCK_REGION_LENGTH__+0x2c4>
 6d4:	b2 14       	cp	r11, r2
 6d6:	18 f4       	brcc	.+6      	; 0x6de <__LOCK_REGION_LENGTH__+0x2de>
 6d8:	2b 18       	sub	r2, r11
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <__LOCK_REGION_LENGTH__+0x2e0>
 6dc:	98 2c       	mov	r9, r8
 6de:	21 2c       	mov	r2, r1
 6e0:	a4 fe       	sbrs	r10, 4
 6e2:	0f c0       	rjmp	.+30     	; 0x702 <__LOCK_REGION_LENGTH__+0x302>
 6e4:	b6 01       	movw	r22, r12
 6e6:	80 e3       	ldi	r24, 0x30	; 48
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	68 d0       	rcall	.+208    	; 0x7bc <fputc>
 6ec:	a2 fe       	sbrs	r10, 2
 6ee:	16 c0       	rjmp	.+44     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 6f0:	a1 fc       	sbrc	r10, 1
 6f2:	03 c0       	rjmp	.+6      	; 0x6fa <__LOCK_REGION_LENGTH__+0x2fa>
 6f4:	88 e7       	ldi	r24, 0x78	; 120
 6f6:	90 e0       	ldi	r25, 0x00	; 0
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <__LOCK_REGION_LENGTH__+0x2fe>
 6fa:	88 e5       	ldi	r24, 0x58	; 88
 6fc:	90 e0       	ldi	r25, 0x00	; 0
 6fe:	b6 01       	movw	r22, r12
 700:	0c c0       	rjmp	.+24     	; 0x71a <__LOCK_REGION_LENGTH__+0x31a>
 702:	8a 2d       	mov	r24, r10
 704:	86 78       	andi	r24, 0x86	; 134
 706:	51 f0       	breq	.+20     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 708:	a1 fe       	sbrs	r10, 1
 70a:	02 c0       	rjmp	.+4      	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 70c:	8b e2       	ldi	r24, 0x2B	; 43
 70e:	01 c0       	rjmp	.+2      	; 0x712 <__LOCK_REGION_LENGTH__+0x312>
 710:	80 e2       	ldi	r24, 0x20	; 32
 712:	a7 fc       	sbrc	r10, 7
 714:	8d e2       	ldi	r24, 0x2D	; 45
 716:	b6 01       	movw	r22, r12
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	50 d0       	rcall	.+160    	; 0x7bc <fputc>
 71c:	89 14       	cp	r8, r9
 71e:	30 f4       	brcc	.+12     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 720:	b6 01       	movw	r22, r12
 722:	80 e3       	ldi	r24, 0x30	; 48
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	4a d0       	rcall	.+148    	; 0x7bc <fputc>
 728:	9a 94       	dec	r9
 72a:	f8 cf       	rjmp	.-16     	; 0x71c <__LOCK_REGION_LENGTH__+0x31c>
 72c:	8a 94       	dec	r8
 72e:	f3 01       	movw	r30, r6
 730:	e8 0d       	add	r30, r8
 732:	f1 1d       	adc	r31, r1
 734:	80 81       	ld	r24, Z
 736:	b6 01       	movw	r22, r12
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	40 d0       	rcall	.+128    	; 0x7bc <fputc>
 73c:	81 10       	cpse	r8, r1
 73e:	f6 cf       	rjmp	.-20     	; 0x72c <__LOCK_REGION_LENGTH__+0x32c>
 740:	22 20       	and	r2, r2
 742:	09 f4       	brne	.+2      	; 0x746 <__LOCK_REGION_LENGTH__+0x346>
 744:	4e ce       	rjmp	.-868    	; 0x3e2 <vfprintf+0x4c>
 746:	b6 01       	movw	r22, r12
 748:	80 e2       	ldi	r24, 0x20	; 32
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	37 d0       	rcall	.+110    	; 0x7bc <fputc>
 74e:	2a 94       	dec	r2
 750:	f7 cf       	rjmp	.-18     	; 0x740 <__LOCK_REGION_LENGTH__+0x340>
 752:	f6 01       	movw	r30, r12
 754:	86 81       	ldd	r24, Z+6	; 0x06
 756:	97 81       	ldd	r25, Z+7	; 0x07
 758:	02 c0       	rjmp	.+4      	; 0x75e <__LOCK_REGION_LENGTH__+0x35e>
 75a:	8f ef       	ldi	r24, 0xFF	; 255
 75c:	9f ef       	ldi	r25, 0xFF	; 255
 75e:	2b 96       	adiw	r28, 0x0b	; 11
 760:	0f b6       	in	r0, 0x3f	; 63
 762:	f8 94       	cli
 764:	de bf       	out	0x3e, r29	; 62
 766:	0f be       	out	0x3f, r0	; 63
 768:	cd bf       	out	0x3d, r28	; 61
 76a:	df 91       	pop	r29
 76c:	cf 91       	pop	r28
 76e:	1f 91       	pop	r17
 770:	0f 91       	pop	r16
 772:	ff 90       	pop	r15
 774:	ef 90       	pop	r14
 776:	df 90       	pop	r13
 778:	cf 90       	pop	r12
 77a:	bf 90       	pop	r11
 77c:	af 90       	pop	r10
 77e:	9f 90       	pop	r9
 780:	8f 90       	pop	r8
 782:	7f 90       	pop	r7
 784:	6f 90       	pop	r6
 786:	5f 90       	pop	r5
 788:	4f 90       	pop	r4
 78a:	3f 90       	pop	r3
 78c:	2f 90       	pop	r2
 78e:	08 95       	ret

00000790 <strnlen_P>:
 790:	fc 01       	movw	r30, r24
 792:	05 90       	lpm	r0, Z+
 794:	61 50       	subi	r22, 0x01	; 1
 796:	70 40       	sbci	r23, 0x00	; 0
 798:	01 10       	cpse	r0, r1
 79a:	d8 f7       	brcc	.-10     	; 0x792 <strnlen_P+0x2>
 79c:	80 95       	com	r24
 79e:	90 95       	com	r25
 7a0:	8e 0f       	add	r24, r30
 7a2:	9f 1f       	adc	r25, r31
 7a4:	08 95       	ret

000007a6 <strnlen>:
 7a6:	fc 01       	movw	r30, r24
 7a8:	61 50       	subi	r22, 0x01	; 1
 7aa:	70 40       	sbci	r23, 0x00	; 0
 7ac:	01 90       	ld	r0, Z+
 7ae:	01 10       	cpse	r0, r1
 7b0:	d8 f7       	brcc	.-10     	; 0x7a8 <strnlen+0x2>
 7b2:	80 95       	com	r24
 7b4:	90 95       	com	r25
 7b6:	8e 0f       	add	r24, r30
 7b8:	9f 1f       	adc	r25, r31
 7ba:	08 95       	ret

000007bc <fputc>:
 7bc:	0f 93       	push	r16
 7be:	1f 93       	push	r17
 7c0:	cf 93       	push	r28
 7c2:	df 93       	push	r29
 7c4:	fb 01       	movw	r30, r22
 7c6:	23 81       	ldd	r18, Z+3	; 0x03
 7c8:	21 fd       	sbrc	r18, 1
 7ca:	03 c0       	rjmp	.+6      	; 0x7d2 <fputc+0x16>
 7cc:	8f ef       	ldi	r24, 0xFF	; 255
 7ce:	9f ef       	ldi	r25, 0xFF	; 255
 7d0:	2c c0       	rjmp	.+88     	; 0x82a <fputc+0x6e>
 7d2:	22 ff       	sbrs	r18, 2
 7d4:	16 c0       	rjmp	.+44     	; 0x802 <fputc+0x46>
 7d6:	46 81       	ldd	r20, Z+6	; 0x06
 7d8:	57 81       	ldd	r21, Z+7	; 0x07
 7da:	24 81       	ldd	r18, Z+4	; 0x04
 7dc:	35 81       	ldd	r19, Z+5	; 0x05
 7de:	42 17       	cp	r20, r18
 7e0:	53 07       	cpc	r21, r19
 7e2:	44 f4       	brge	.+16     	; 0x7f4 <fputc+0x38>
 7e4:	a0 81       	ld	r26, Z
 7e6:	b1 81       	ldd	r27, Z+1	; 0x01
 7e8:	9d 01       	movw	r18, r26
 7ea:	2f 5f       	subi	r18, 0xFF	; 255
 7ec:	3f 4f       	sbci	r19, 0xFF	; 255
 7ee:	31 83       	std	Z+1, r19	; 0x01
 7f0:	20 83       	st	Z, r18
 7f2:	8c 93       	st	X, r24
 7f4:	26 81       	ldd	r18, Z+6	; 0x06
 7f6:	37 81       	ldd	r19, Z+7	; 0x07
 7f8:	2f 5f       	subi	r18, 0xFF	; 255
 7fa:	3f 4f       	sbci	r19, 0xFF	; 255
 7fc:	37 83       	std	Z+7, r19	; 0x07
 7fe:	26 83       	std	Z+6, r18	; 0x06
 800:	14 c0       	rjmp	.+40     	; 0x82a <fputc+0x6e>
 802:	8b 01       	movw	r16, r22
 804:	ec 01       	movw	r28, r24
 806:	fb 01       	movw	r30, r22
 808:	00 84       	ldd	r0, Z+8	; 0x08
 80a:	f1 85       	ldd	r31, Z+9	; 0x09
 80c:	e0 2d       	mov	r30, r0
 80e:	09 95       	icall
 810:	89 2b       	or	r24, r25
 812:	e1 f6       	brne	.-72     	; 0x7cc <fputc+0x10>
 814:	d8 01       	movw	r26, r16
 816:	16 96       	adiw	r26, 0x06	; 6
 818:	8d 91       	ld	r24, X+
 81a:	9c 91       	ld	r25, X
 81c:	17 97       	sbiw	r26, 0x07	; 7
 81e:	01 96       	adiw	r24, 0x01	; 1
 820:	17 96       	adiw	r26, 0x07	; 7
 822:	9c 93       	st	X, r25
 824:	8e 93       	st	-X, r24
 826:	16 97       	sbiw	r26, 0x06	; 6
 828:	ce 01       	movw	r24, r28
 82a:	df 91       	pop	r29
 82c:	cf 91       	pop	r28
 82e:	1f 91       	pop	r17
 830:	0f 91       	pop	r16
 832:	08 95       	ret

00000834 <__ultoa_invert>:
 834:	fa 01       	movw	r30, r20
 836:	aa 27       	eor	r26, r26
 838:	28 30       	cpi	r18, 0x08	; 8
 83a:	51 f1       	breq	.+84     	; 0x890 <__ultoa_invert+0x5c>
 83c:	20 31       	cpi	r18, 0x10	; 16
 83e:	81 f1       	breq	.+96     	; 0x8a0 <__ultoa_invert+0x6c>
 840:	e8 94       	clt
 842:	6f 93       	push	r22
 844:	6e 7f       	andi	r22, 0xFE	; 254
 846:	6e 5f       	subi	r22, 0xFE	; 254
 848:	7f 4f       	sbci	r23, 0xFF	; 255
 84a:	8f 4f       	sbci	r24, 0xFF	; 255
 84c:	9f 4f       	sbci	r25, 0xFF	; 255
 84e:	af 4f       	sbci	r26, 0xFF	; 255
 850:	b1 e0       	ldi	r27, 0x01	; 1
 852:	3e d0       	rcall	.+124    	; 0x8d0 <__ultoa_invert+0x9c>
 854:	b4 e0       	ldi	r27, 0x04	; 4
 856:	3c d0       	rcall	.+120    	; 0x8d0 <__ultoa_invert+0x9c>
 858:	67 0f       	add	r22, r23
 85a:	78 1f       	adc	r23, r24
 85c:	89 1f       	adc	r24, r25
 85e:	9a 1f       	adc	r25, r26
 860:	a1 1d       	adc	r26, r1
 862:	68 0f       	add	r22, r24
 864:	79 1f       	adc	r23, r25
 866:	8a 1f       	adc	r24, r26
 868:	91 1d       	adc	r25, r1
 86a:	a1 1d       	adc	r26, r1
 86c:	6a 0f       	add	r22, r26
 86e:	71 1d       	adc	r23, r1
 870:	81 1d       	adc	r24, r1
 872:	91 1d       	adc	r25, r1
 874:	a1 1d       	adc	r26, r1
 876:	20 d0       	rcall	.+64     	; 0x8b8 <__ultoa_invert+0x84>
 878:	09 f4       	brne	.+2      	; 0x87c <__ultoa_invert+0x48>
 87a:	68 94       	set
 87c:	3f 91       	pop	r19
 87e:	2a e0       	ldi	r18, 0x0A	; 10
 880:	26 9f       	mul	r18, r22
 882:	11 24       	eor	r1, r1
 884:	30 19       	sub	r19, r0
 886:	30 5d       	subi	r19, 0xD0	; 208
 888:	31 93       	st	Z+, r19
 88a:	de f6       	brtc	.-74     	; 0x842 <__ultoa_invert+0xe>
 88c:	cf 01       	movw	r24, r30
 88e:	08 95       	ret
 890:	46 2f       	mov	r20, r22
 892:	47 70       	andi	r20, 0x07	; 7
 894:	40 5d       	subi	r20, 0xD0	; 208
 896:	41 93       	st	Z+, r20
 898:	b3 e0       	ldi	r27, 0x03	; 3
 89a:	0f d0       	rcall	.+30     	; 0x8ba <__ultoa_invert+0x86>
 89c:	c9 f7       	brne	.-14     	; 0x890 <__ultoa_invert+0x5c>
 89e:	f6 cf       	rjmp	.-20     	; 0x88c <__ultoa_invert+0x58>
 8a0:	46 2f       	mov	r20, r22
 8a2:	4f 70       	andi	r20, 0x0F	; 15
 8a4:	40 5d       	subi	r20, 0xD0	; 208
 8a6:	4a 33       	cpi	r20, 0x3A	; 58
 8a8:	18 f0       	brcs	.+6      	; 0x8b0 <__ultoa_invert+0x7c>
 8aa:	49 5d       	subi	r20, 0xD9	; 217
 8ac:	31 fd       	sbrc	r19, 1
 8ae:	40 52       	subi	r20, 0x20	; 32
 8b0:	41 93       	st	Z+, r20
 8b2:	02 d0       	rcall	.+4      	; 0x8b8 <__ultoa_invert+0x84>
 8b4:	a9 f7       	brne	.-22     	; 0x8a0 <__ultoa_invert+0x6c>
 8b6:	ea cf       	rjmp	.-44     	; 0x88c <__ultoa_invert+0x58>
 8b8:	b4 e0       	ldi	r27, 0x04	; 4
 8ba:	a6 95       	lsr	r26
 8bc:	97 95       	ror	r25
 8be:	87 95       	ror	r24
 8c0:	77 95       	ror	r23
 8c2:	67 95       	ror	r22
 8c4:	ba 95       	dec	r27
 8c6:	c9 f7       	brne	.-14     	; 0x8ba <__ultoa_invert+0x86>
 8c8:	00 97       	sbiw	r24, 0x00	; 0
 8ca:	61 05       	cpc	r22, r1
 8cc:	71 05       	cpc	r23, r1
 8ce:	08 95       	ret
 8d0:	9b 01       	movw	r18, r22
 8d2:	ac 01       	movw	r20, r24
 8d4:	0a 2e       	mov	r0, r26
 8d6:	06 94       	lsr	r0
 8d8:	57 95       	ror	r21
 8da:	47 95       	ror	r20
 8dc:	37 95       	ror	r19
 8de:	27 95       	ror	r18
 8e0:	ba 95       	dec	r27
 8e2:	c9 f7       	brne	.-14     	; 0x8d6 <__ultoa_invert+0xa2>
 8e4:	62 0f       	add	r22, r18
 8e6:	73 1f       	adc	r23, r19
 8e8:	84 1f       	adc	r24, r20
 8ea:	95 1f       	adc	r25, r21
 8ec:	a0 1d       	adc	r26, r0
 8ee:	08 95       	ret

000008f0 <_exit>:
 8f0:	f8 94       	cli

000008f2 <__stop_program>:
 8f2:	ff cf       	rjmp	.-2      	; 0x8f2 <__stop_program>
